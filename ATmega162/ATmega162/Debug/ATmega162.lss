
ATmega162.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00000848  000008dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000848  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  00800106  00800106  000008e2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000008e2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000914  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  00000950  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e33  00000000  00000000  00000a10  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009de  00000000  00000000  00001843  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005b1  00000000  00000000  00002221  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000190  00000000  00000000  000027d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004fd  00000000  00000000  00002964  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000459  00000000  00000000  00002e61  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  000032ba  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
   4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
   8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
   c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
  78:	00 06       	cpc	r0, r16
  7a:	5f 5f       	subi	r21, 0xFF	; 255
  7c:	06 00       	.word	0x0006	; ????
  7e:	00 00       	nop
  80:	00 07       	cpc	r16, r16
  82:	07 00       	.word	0x0007	; ????
  84:	07 07       	cpc	r16, r23
  86:	00 00       	nop
  88:	14 7f       	andi	r17, 0xF4	; 244
  8a:	7f 14       	cp	r7, r15
  8c:	7f 7f       	andi	r23, 0xFF	; 255
  8e:	14 00       	.word	0x0014	; ????
  90:	24 2e       	mov	r2, r20
  92:	6b 6b       	ori	r22, 0xBB	; 187
  94:	3a 12       	cpse	r3, r26
  96:	00 00       	nop
  98:	46 66       	ori	r20, 0x66	; 102
  9a:	30 18       	sub	r3, r0
  9c:	0c 66       	ori	r16, 0x6C	; 108
  9e:	62 00       	.word	0x0062	; ????
  a0:	30 7a       	andi	r19, 0xA0	; 160
  a2:	4f 5d       	subi	r20, 0xDF	; 223
  a4:	37 7a       	andi	r19, 0xA7	; 167
  a6:	48 00       	.word	0x0048	; ????
  a8:	04 07       	cpc	r16, r20
  aa:	03 00       	.word	0x0003	; ????
  ac:	00 00       	nop
  ae:	00 00       	nop
  b0:	00 1c       	adc	r0, r0
  b2:	3e 63       	ori	r19, 0x3E	; 62
  b4:	41 00       	.word	0x0041	; ????
  b6:	00 00       	nop
  b8:	00 41       	sbci	r16, 0x10	; 16
  ba:	63 3e       	cpi	r22, 0xE3	; 227
  bc:	1c 00       	.word	0x001c	; ????
  be:	00 00       	nop
  c0:	08 2a       	or	r0, r24
  c2:	3e 1c       	adc	r3, r14
  c4:	1c 3e       	cpi	r17, 0xEC	; 236
  c6:	2a 08       	sbc	r2, r10
  c8:	08 08       	sbc	r0, r8
  ca:	3e 3e       	cpi	r19, 0xEE	; 238
  cc:	08 08       	sbc	r0, r8
  ce:	00 00       	nop
  d0:	00 a0       	ldd	r0, Z+32	; 0x20
  d2:	e0 60       	ori	r30, 0x00	; 0
  d4:	00 00       	nop
  d6:	00 00       	nop
  d8:	08 08       	sbc	r0, r8
  da:	08 08       	sbc	r0, r8
  dc:	08 08       	sbc	r0, r8
  de:	00 00       	nop
  e0:	00 00       	nop
  e2:	60 60       	ori	r22, 0x00	; 0
  e4:	00 00       	nop
  e6:	00 00       	nop
  e8:	60 30       	cpi	r22, 0x00	; 0
  ea:	18 0c       	add	r1, r8
  ec:	06 03       	mulsu	r16, r22
  ee:	01 00       	.word	0x0001	; ????
  f0:	3e 7f       	andi	r19, 0xFE	; 254
  f2:	59 4d       	sbci	r21, 0xD9	; 217
  f4:	7f 3e       	cpi	r23, 0xEF	; 239
  f6:	00 00       	nop
  f8:	42 42       	sbci	r20, 0x22	; 34
  fa:	7f 7f       	andi	r23, 0xFF	; 255
  fc:	40 40       	sbci	r20, 0x00	; 0
  fe:	00 00       	nop
 100:	62 73       	andi	r22, 0x32	; 50
 102:	59 49       	sbci	r21, 0x99	; 153
 104:	6f 66       	ori	r22, 0x6F	; 111
 106:	00 00       	nop
 108:	22 63       	ori	r18, 0x32	; 50
 10a:	49 49       	sbci	r20, 0x99	; 153
 10c:	7f 36       	cpi	r23, 0x6F	; 111
 10e:	00 00       	nop
 110:	18 1c       	adc	r1, r8
 112:	16 13       	cpse	r17, r22
 114:	7f 7f       	andi	r23, 0xFF	; 255
 116:	10 00       	.word	0x0010	; ????
 118:	27 67       	ori	r18, 0x77	; 119
 11a:	45 45       	sbci	r20, 0x55	; 85
 11c:	7d 39       	cpi	r23, 0x9D	; 157
 11e:	00 00       	nop
 120:	3c 7e       	andi	r19, 0xEC	; 236
 122:	4b 49       	sbci	r20, 0x9B	; 155
 124:	79 30       	cpi	r23, 0x09	; 9
 126:	00 00       	nop
 128:	03 63       	ori	r16, 0x33	; 51
 12a:	71 19       	sub	r23, r1
 12c:	0f 07       	cpc	r16, r31
 12e:	00 00       	nop
 130:	36 7f       	andi	r19, 0xF6	; 246
 132:	49 49       	sbci	r20, 0x99	; 153
 134:	7f 36       	cpi	r23, 0x6F	; 111
 136:	00 00       	nop
 138:	06 4f       	sbci	r16, 0xF6	; 246
 13a:	49 69       	ori	r20, 0x99	; 153
 13c:	3f 1e       	adc	r3, r31
 13e:	00 00       	nop
 140:	00 00       	nop
 142:	6c 6c       	ori	r22, 0xCC	; 204
 144:	00 00       	nop
 146:	00 00       	nop
 148:	00 a0       	ldd	r0, Z+32	; 0x20
 14a:	ec 6c       	ori	r30, 0xCC	; 204
 14c:	00 00       	nop
 14e:	00 00       	nop
 150:	08 1c       	adc	r0, r8
 152:	36 63       	ori	r19, 0x36	; 54
 154:	41 00       	.word	0x0041	; ????
 156:	00 00       	nop
 158:	14 14       	cp	r1, r4
 15a:	14 14       	cp	r1, r4
 15c:	14 14       	cp	r1, r4
 15e:	00 00       	nop
 160:	00 41       	sbci	r16, 0x10	; 16
 162:	63 36       	cpi	r22, 0x63	; 99
 164:	1c 08       	sbc	r1, r12
 166:	00 00       	nop
 168:	02 03       	mulsu	r16, r18
 16a:	51 59       	subi	r21, 0x91	; 145
 16c:	0f 06       	cpc	r0, r31
 16e:	00 00       	nop
 170:	3e 7f       	andi	r19, 0xFE	; 254
 172:	41 5d       	subi	r20, 0xD1	; 209
 174:	5d 1f       	adc	r21, r29
 176:	1e 00       	.word	0x001e	; ????
 178:	7c 7e       	andi	r23, 0xEC	; 236
 17a:	13 13       	cpse	r17, r19
 17c:	7e 7c       	andi	r23, 0xCE	; 206
 17e:	00 00       	nop
 180:	41 7f       	andi	r20, 0xF1	; 241
 182:	7f 49       	sbci	r23, 0x9F	; 159
 184:	49 7f       	andi	r20, 0xF9	; 249
 186:	36 00       	.word	0x0036	; ????
 188:	1c 3e       	cpi	r17, 0xEC	; 236
 18a:	63 41       	sbci	r22, 0x13	; 19
 18c:	41 63       	ori	r20, 0x31	; 49
 18e:	22 00       	.word	0x0022	; ????
 190:	41 7f       	andi	r20, 0xF1	; 241
 192:	7f 41       	sbci	r23, 0x1F	; 31
 194:	63 7f       	andi	r22, 0xF3	; 243
 196:	1c 00       	.word	0x001c	; ????
 198:	41 7f       	andi	r20, 0xF1	; 241
 19a:	7f 49       	sbci	r23, 0x9F	; 159
 19c:	5d 41       	sbci	r21, 0x1D	; 29
 19e:	63 00       	.word	0x0063	; ????
 1a0:	41 7f       	andi	r20, 0xF1	; 241
 1a2:	7f 49       	sbci	r23, 0x9F	; 159
 1a4:	1d 01       	movw	r2, r26
 1a6:	03 00       	.word	0x0003	; ????
 1a8:	1c 3e       	cpi	r17, 0xEC	; 236
 1aa:	63 41       	sbci	r22, 0x13	; 19
 1ac:	51 73       	andi	r21, 0x31	; 49
 1ae:	72 00       	.word	0x0072	; ????
 1b0:	7f 7f       	andi	r23, 0xFF	; 255
 1b2:	08 08       	sbc	r0, r8
 1b4:	7f 7f       	andi	r23, 0xFF	; 255
 1b6:	00 00       	nop
 1b8:	00 41       	sbci	r16, 0x10	; 16
 1ba:	7f 7f       	andi	r23, 0xFF	; 255
 1bc:	41 00       	.word	0x0041	; ????
 1be:	00 00       	nop
 1c0:	30 70       	andi	r19, 0x00	; 0
 1c2:	40 41       	sbci	r20, 0x10	; 16
 1c4:	7f 3f       	cpi	r23, 0xFF	; 255
 1c6:	01 00       	.word	0x0001	; ????
 1c8:	41 7f       	andi	r20, 0xF1	; 241
 1ca:	7f 08       	sbc	r7, r15
 1cc:	1c 77       	andi	r17, 0x7C	; 124
 1ce:	63 00       	.word	0x0063	; ????
 1d0:	41 7f       	andi	r20, 0xF1	; 241
 1d2:	7f 41       	sbci	r23, 0x1F	; 31
 1d4:	40 60       	ori	r20, 0x00	; 0
 1d6:	70 00       	.word	0x0070	; ????
 1d8:	7f 7f       	andi	r23, 0xFF	; 255
 1da:	06 0c       	add	r0, r6
 1dc:	06 7f       	andi	r16, 0xF6	; 246
 1de:	7f 00       	.word	0x007f	; ????
 1e0:	7f 7f       	andi	r23, 0xFF	; 255
 1e2:	06 0c       	add	r0, r6
 1e4:	18 7f       	andi	r17, 0xF8	; 248
 1e6:	7f 00       	.word	0x007f	; ????
 1e8:	1c 3e       	cpi	r17, 0xEC	; 236
 1ea:	63 41       	sbci	r22, 0x13	; 19
 1ec:	63 3e       	cpi	r22, 0xE3	; 227
 1ee:	1c 00       	.word	0x001c	; ????
 1f0:	41 7f       	andi	r20, 0xF1	; 241
 1f2:	7f 49       	sbci	r23, 0x9F	; 159
 1f4:	09 0f       	add	r16, r25
 1f6:	06 00       	.word	0x0006	; ????
 1f8:	1e 3f       	cpi	r17, 0xFE	; 254
 1fa:	21 71       	andi	r18, 0x11	; 17
 1fc:	7f 5e       	subi	r23, 0xEF	; 239
 1fe:	00 00       	nop
 200:	41 7f       	andi	r20, 0xF1	; 241
 202:	7f 19       	sub	r23, r15
 204:	39 6f       	ori	r19, 0xF9	; 249
 206:	46 00       	.word	0x0046	; ????
 208:	26 67       	ori	r18, 0x76	; 118
 20a:	4d 59       	subi	r20, 0x9D	; 157
 20c:	7b 32       	cpi	r23, 0x2B	; 43
 20e:	00 00       	nop
 210:	03 41       	sbci	r16, 0x13	; 19
 212:	7f 7f       	andi	r23, 0xFF	; 255
 214:	41 03       	mulsu	r20, r17
 216:	00 00       	nop
 218:	7f 7f       	andi	r23, 0xFF	; 255
 21a:	40 40       	sbci	r20, 0x00	; 0
 21c:	7f 7f       	andi	r23, 0xFF	; 255
 21e:	00 00       	nop
 220:	1f 3f       	cpi	r17, 0xFF	; 255
 222:	60 60       	ori	r22, 0x00	; 0
 224:	3f 1f       	adc	r19, r31
 226:	00 00       	nop
 228:	7f 7f       	andi	r23, 0xFF	; 255
 22a:	30 18       	sub	r3, r0
 22c:	30 7f       	andi	r19, 0xF0	; 240
 22e:	7f 00       	.word	0x007f	; ????
 230:	63 77       	andi	r22, 0x73	; 115
 232:	1c 08       	sbc	r1, r12
 234:	1c 77       	andi	r17, 0x7C	; 124
 236:	63 00       	.word	0x0063	; ????
 238:	07 4f       	sbci	r16, 0xF7	; 247
 23a:	78 78       	andi	r23, 0x88	; 136
 23c:	4f 07       	cpc	r20, r31
 23e:	00 00       	nop
 240:	67 73       	andi	r22, 0x37	; 55
 242:	59 4d       	sbci	r21, 0xD9	; 217
 244:	47 63       	ori	r20, 0x37	; 55
 246:	71 00       	.word	0x0071	; ????
 248:	00 7f       	andi	r16, 0xF0	; 240
 24a:	7f 41       	sbci	r23, 0x1F	; 31
 24c:	41 00       	.word	0x0041	; ????
 24e:	00 00       	nop
 250:	01 03       	mulsu	r16, r17
 252:	06 0c       	add	r0, r6
 254:	18 30       	cpi	r17, 0x08	; 8
 256:	60 00       	.word	0x0060	; ????
 258:	00 41       	sbci	r16, 0x10	; 16
 25a:	41 7f       	andi	r20, 0xF1	; 241
 25c:	7f 00       	.word	0x007f	; ????
 25e:	00 00       	nop
 260:	08 0c       	add	r0, r8
 262:	06 03       	mulsu	r16, r22
 264:	06 0c       	add	r0, r6
 266:	08 00       	.word	0x0008	; ????
 268:	80 80       	ld	r8, Z
 26a:	80 80       	ld	r8, Z
 26c:	80 80       	ld	r8, Z
 26e:	80 80       	ld	r8, Z
 270:	00 00       	nop
 272:	03 07       	cpc	r16, r19
 274:	04 00       	.word	0x0004	; ????
 276:	00 00       	nop
 278:	20 74       	andi	r18, 0x40	; 64
 27a:	54 54       	subi	r21, 0x44	; 68
 27c:	3c 78       	andi	r19, 0x8C	; 140
 27e:	40 00       	.word	0x0040	; ????
 280:	41 3f       	cpi	r20, 0xF1	; 241
 282:	7f 44       	sbci	r23, 0x4F	; 79
 284:	44 7c       	andi	r20, 0xC4	; 196
 286:	38 00       	.word	0x0038	; ????
 288:	38 7c       	andi	r19, 0xC8	; 200
 28a:	44 44       	sbci	r20, 0x44	; 68
 28c:	6c 28       	or	r6, r12
 28e:	00 00       	nop
 290:	30 78       	andi	r19, 0x80	; 128
 292:	48 49       	sbci	r20, 0x98	; 152
 294:	3f 7f       	andi	r19, 0xFF	; 255
 296:	40 00       	.word	0x0040	; ????
 298:	38 7c       	andi	r19, 0xC8	; 200
 29a:	54 54       	subi	r21, 0x44	; 68
 29c:	5c 18       	sub	r5, r12
 29e:	00 00       	nop
 2a0:	48 7e       	andi	r20, 0xE8	; 232
 2a2:	7f 49       	sbci	r23, 0x9F	; 159
 2a4:	03 02       	muls	r16, r19
 2a6:	00 00       	nop
 2a8:	98 bc       	out	0x28, r9	; 40
 2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
 2ac:	f8 7c       	andi	r31, 0xC8	; 200
 2ae:	04 00       	.word	0x0004	; ????
 2b0:	41 7f       	andi	r20, 0xF1	; 241
 2b2:	7f 08       	sbc	r7, r15
 2b4:	04 7c       	andi	r16, 0xC4	; 196
 2b6:	78 00       	.word	0x0078	; ????
 2b8:	00 44       	sbci	r16, 0x40	; 64
 2ba:	7d 7d       	andi	r23, 0xDD	; 221
 2bc:	40 00       	.word	0x0040	; ????
 2be:	00 00       	nop
 2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <__data_load_end+0x2f4>
 2c2:	84 fd       	sbrc	r24, 4
 2c4:	7d 00       	.word	0x007d	; ????
 2c6:	00 00       	nop
 2c8:	41 7f       	andi	r20, 0xF1	; 241
 2ca:	7f 10       	cpse	r7, r15
 2cc:	38 6c       	ori	r19, 0xC8	; 200
 2ce:	44 00       	.word	0x0044	; ????
 2d0:	00 41       	sbci	r16, 0x10	; 16
 2d2:	7f 7f       	andi	r23, 0xFF	; 255
 2d4:	40 00       	.word	0x0040	; ????
 2d6:	00 00       	nop
 2d8:	7c 7c       	andi	r23, 0xCC	; 204
 2da:	0c 18       	sub	r0, r12
 2dc:	0c 7c       	andi	r16, 0xCC	; 204
 2de:	78 00       	.word	0x0078	; ????
 2e0:	7c 7c       	andi	r23, 0xCC	; 204
 2e2:	04 04       	cpc	r0, r4
 2e4:	7c 78       	andi	r23, 0x8C	; 140
 2e6:	00 00       	nop
 2e8:	38 7c       	andi	r19, 0xC8	; 200
 2ea:	44 44       	sbci	r20, 0x44	; 68
 2ec:	7c 38       	cpi	r23, 0x8C	; 140
 2ee:	00 00       	nop
 2f0:	84 fc       	sbrc	r8, 4
 2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
 2f4:	24 3c       	cpi	r18, 0xC4	; 196
 2f6:	18 00       	.word	0x0018	; ????
 2f8:	18 3c       	cpi	r17, 0xC8	; 200
 2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
 2fc:	f8 fc       	.word	0xfcf8	; ????
 2fe:	84 00       	.word	0x0084	; ????
 300:	44 7c       	andi	r20, 0xC4	; 196
 302:	78 44       	sbci	r23, 0x48	; 72
 304:	1c 18       	sub	r1, r12
 306:	00 00       	nop
 308:	48 5c       	subi	r20, 0xC8	; 200
 30a:	54 54       	subi	r21, 0x44	; 68
 30c:	74 24       	eor	r7, r4
 30e:	00 00       	nop
 310:	00 04       	cpc	r0, r0
 312:	3e 7f       	andi	r19, 0xFE	; 254
 314:	44 24       	eor	r4, r4
 316:	00 00       	nop
 318:	3c 7c       	andi	r19, 0xCC	; 204
 31a:	40 40       	sbci	r20, 0x00	; 0
 31c:	3c 7c       	andi	r19, 0xCC	; 204
 31e:	40 00       	.word	0x0040	; ????
 320:	1c 3c       	cpi	r17, 0xCC	; 204
 322:	60 60       	ori	r22, 0x00	; 0
 324:	3c 1c       	adc	r3, r12
 326:	00 00       	nop
 328:	3c 7c       	andi	r19, 0xCC	; 204
 32a:	60 30       	cpi	r22, 0x00	; 0
 32c:	60 7c       	andi	r22, 0xC0	; 192
 32e:	3c 00       	.word	0x003c	; ????
 330:	44 6c       	ori	r20, 0xC4	; 196
 332:	38 10       	cpse	r3, r8
 334:	38 6c       	ori	r19, 0xC8	; 200
 336:	44 00       	.word	0x0044	; ????
 338:	9c bc       	out	0x2c, r9	; 44
 33a:	a0 a0       	ldd	r10, Z+32	; 0x20
 33c:	fc 7c       	andi	r31, 0xCC	; 204
 33e:	00 00       	nop
 340:	4c 64       	ori	r20, 0x4C	; 76
 342:	74 5c       	subi	r23, 0xC4	; 196
 344:	4c 64       	ori	r20, 0x4C	; 76
 346:	00 00       	nop
 348:	08 08       	sbc	r0, r8
 34a:	3e 77       	andi	r19, 0x7E	; 126
 34c:	41 41       	sbci	r20, 0x11	; 17
 34e:	00 00       	nop
 350:	00 00       	nop
 352:	00 77       	andi	r16, 0x70	; 112
 354:	77 00       	.word	0x0077	; ????
 356:	00 00       	nop
 358:	41 41       	sbci	r20, 0x11	; 17
 35a:	77 3e       	cpi	r23, 0xE7	; 231
 35c:	08 08       	sbc	r0, r8
 35e:	00 00       	nop
 360:	02 03       	mulsu	r16, r18
 362:	01 03       	mulsu	r16, r17
 364:	02 03       	mulsu	r16, r18
 366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
 368:	11 24       	eor	r1, r1
 36a:	1f be       	out	0x3f, r1	; 63
 36c:	cf ef       	ldi	r28, 0xFF	; 255
 36e:	d4 e0       	ldi	r29, 0x04	; 4
 370:	de bf       	out	0x3e, r29	; 62
 372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
 374:	11 e0       	ldi	r17, 0x01	; 1
 376:	a0 e0       	ldi	r26, 0x00	; 0
 378:	b1 e0       	ldi	r27, 0x01	; 1
 37a:	e8 e4       	ldi	r30, 0x48	; 72
 37c:	f8 e0       	ldi	r31, 0x08	; 8
 37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
 380:	05 90       	lpm	r0, Z+
 382:	0d 92       	st	X+, r0
 384:	a6 30       	cpi	r26, 0x06	; 6
 386:	b1 07       	cpc	r27, r17
 388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
 38a:	21 e0       	ldi	r18, 0x01	; 1
 38c:	a6 e0       	ldi	r26, 0x06	; 6
 38e:	b1 e0       	ldi	r27, 0x01	; 1
 390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
 392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
 394:	a6 31       	cpi	r26, 0x16	; 22
 396:	b2 07       	cpc	r27, r18
 398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
 39a:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <main>
 39e:	0c 94 22 04 	jmp	0x844	; 0x844 <_exit>

000003a2 <__bad_interrupt>:
 3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <main>:
#include "adc.h"
#include "oled.h"

int main()
{
	uart_init(9600);
 3a6:	80 e8       	ldi	r24, 0x80	; 128
 3a8:	95 e2       	ldi	r25, 0x25	; 37
 3aa:	0e 94 53 02 	call	0x4a6	; 0x4a6 <uart_init>
	init_xmem();
 3ae:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <init_xmem>
	oled_init();
 3b2:	0e 94 e5 01 	call	0x3ca	; 0x3ca <oled_init>
	oled_flush();
 3b6:	0e 94 32 02 	call	0x464	; 0x464 <oled_flush>
	
	oled_write_char('a', 0, 0);
 3ba:	40 e0       	ldi	r20, 0x00	; 0
 3bc:	60 e0       	ldi	r22, 0x00	; 0
 3be:	81 e6       	ldi	r24, 0x61	; 97
 3c0:	0e 94 11 02 	call	0x422	; 0x422 <oled_write_char>

	
	

	
}
 3c4:	80 e0       	ldi	r24, 0x00	; 0
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	08 95       	ret

000003ca <oled_init>:
	call_command(0x20);
	call_command(mam);
}

void oled_init() {
	COMMAND = (char*) 0x1000;
 3ca:	e0 e0       	ldi	r30, 0x00	; 0
 3cc:	f0 e1       	ldi	r31, 0x10	; 16
 3ce:	f0 93 09 01 	sts	0x0109, r31	; 0x800109 <COMMAND+0x1>
 3d2:	e0 93 08 01 	sts	0x0108, r30	; 0x800108 <COMMAND>
	DATA = (char*) 0x1200;
 3d6:	80 e0       	ldi	r24, 0x00	; 0
 3d8:	92 e1       	ldi	r25, 0x12	; 18
 3da:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <__data_end+0x1>
 3de:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end>
	oled_segments = (char*)0x1800;
 3e2:	80 e0       	ldi	r24, 0x00	; 0
 3e4:	98 e1       	ldi	r25, 0x18	; 24
 3e6:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <oled_segments+0x1>
 3ea:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <oled_segments>

static volatile char *COMMAND;
static volatile char *DATA;

static void call_command(char command) {
	COMMAND[0] = command;
 3ee:	8f ea       	ldi	r24, 0xAF	; 175
 3f0:	80 83       	st	Z, r24
 3f2:	80 e2       	ldi	r24, 0x20	; 32
 3f4:	80 83       	st	Z, r24
 3f6:	10 82       	st	Z, r1
 3f8:	08 95       	ret

000003fa <oled_update>:
	memory_addressing_mode(horizontal);
}

void oled_update() {
	for (int i = 0; i<1024; i++) {
		DATA[0] = oled_segments[i];
 3fa:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <__data_end>
 3fe:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <__data_end+0x1>
	display_on_off(true);
	memory_addressing_mode(horizontal);
}

void oled_update() {
	for (int i = 0; i<1024; i++) {
 402:	80 e0       	ldi	r24, 0x00	; 0
 404:	90 e0       	ldi	r25, 0x00	; 0
		DATA[0] = oled_segments[i];
 406:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <oled_segments>
 40a:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <oled_segments+0x1>
 40e:	e8 0f       	add	r30, r24
 410:	f9 1f       	adc	r31, r25
 412:	20 81       	ld	r18, Z
 414:	2c 93       	st	X, r18
	display_on_off(true);
	memory_addressing_mode(horizontal);
}

void oled_update() {
	for (int i = 0; i<1024; i++) {
 416:	01 96       	adiw	r24, 0x01	; 1
 418:	81 15       	cp	r24, r1
 41a:	24 e0       	ldi	r18, 0x04	; 4
 41c:	92 07       	cpc	r25, r18
 41e:	99 f7       	brne	.-26     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
		DATA[0] = oled_segments[i];
	}
}
 420:	08 95       	ret

00000422 <oled_write_char>:

void oled_write_char(char c, uint8_t pos, uint8_t line) {
 422:	90 e1       	ldi	r25, 0x10	; 16
 424:	49 9f       	mul	r20, r25
 426:	60 0d       	add	r22, r0
 428:	11 24       	eor	r1, r1
 42a:	66 0f       	add	r22, r22
 42c:	66 0f       	add	r22, r22
 42e:	66 0f       	add	r22, r22
 430:	26 2f       	mov	r18, r22
 432:	30 e0       	ldi	r19, 0x00	; 0
 434:	48 e0       	ldi	r20, 0x08	; 8
 436:	84 9f       	mul	r24, r20
 438:	c0 01       	movw	r24, r0
 43a:	11 24       	eor	r1, r1
 43c:	dc 01       	movw	r26, r24
 43e:	a8 58       	subi	r26, 0x88	; 136
 440:	b0 40       	sbci	r27, 0x00	; 0
 442:	a9 01       	movw	r20, r18
 444:	48 5f       	subi	r20, 0xF8	; 248
 446:	5f 4f       	sbci	r21, 0xFF	; 255
	const uint8_t offset = 128 * line + 8 * pos;
	for (int i = 0; i<8; i++) {
		oled_segments[offset+i] = font8[c - 31][i];
 448:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <oled_segments>
 44c:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <oled_segments+0x1>
 450:	e2 0f       	add	r30, r18
 452:	f3 1f       	adc	r31, r19
 454:	8d 91       	ld	r24, X+
 456:	80 83       	st	Z, r24
 458:	2f 5f       	subi	r18, 0xFF	; 255
 45a:	3f 4f       	sbci	r19, 0xFF	; 255
	}
}

void oled_write_char(char c, uint8_t pos, uint8_t line) {
	const uint8_t offset = 128 * line + 8 * pos;
	for (int i = 0; i<8; i++) {
 45c:	24 17       	cp	r18, r20
 45e:	35 07       	cpc	r19, r21
 460:	99 f7       	brne	.-26     	; 0x448 <oled_write_char+0x26>
		oled_segments[offset+i] = font8[c - 31][i];
	}
}
 462:	08 95       	ret

00000464 <oled_flush>:

void oled_flush() {
 464:	cf 93       	push	r28
 466:	df 93       	push	r29
	for (int i = 0; i<1024; i++) {
 468:	c0 e0       	ldi	r28, 0x00	; 0
 46a:	d0 e0       	ldi	r29, 0x00	; 0
		oled_segments[i] = 0;
 46c:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <oled_segments>
 470:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <oled_segments+0x1>
 474:	ec 0f       	add	r30, r28
 476:	fd 1f       	adc	r31, r29
 478:	10 82       	st	Z, r1
		oled_update();
 47a:	0e 94 fd 01 	call	0x3fa	; 0x3fa <oled_update>
		oled_segments[offset+i] = font8[c - 31][i];
	}
}

void oled_flush() {
	for (int i = 0; i<1024; i++) {
 47e:	21 96       	adiw	r28, 0x01	; 1
 480:	c1 15       	cp	r28, r1
 482:	84 e0       	ldi	r24, 0x04	; 4
 484:	d8 07       	cpc	r29, r24
 486:	91 f7       	brne	.-28     	; 0x46c <oled_flush+0x8>
		oled_segments[i] = 0;
		oled_update();
	}
}
 488:	df 91       	pop	r29
 48a:	cf 91       	pop	r28
 48c:	08 95       	ret

0000048e <get>:

// copy from datasheet
unsigned char uart_recieve() {
	while (!(UCSR0A & (1<<RXC0)));
	return UDR0;
}
 48e:	80 e0       	ldi	r24, 0x00	; 0
 490:	90 e0       	ldi	r25, 0x00	; 0
 492:	08 95       	ret

00000494 <uart_transmit>:
 494:	5d 9b       	sbis	0x0b, 5	; 11
 496:	fe cf       	rjmp	.-4      	; 0x494 <uart_transmit>
 498:	8c b9       	out	0x0c, r24	; 12
 49a:	08 95       	ret

0000049c <put>:
 49c:	0e 94 4a 02 	call	0x494	; 0x494 <uart_transmit>
 4a0:	80 e0       	ldi	r24, 0x00	; 0
 4a2:	90 e0       	ldi	r25, 0x00	; 0
 4a4:	08 95       	ret

000004a6 <uart_init>:

// copy from datasheet
void uart_init(unsigned int baud_rate) {
	// set baud rate
	unsigned long clock_speed = 4915200;
	unsigned char ubrr = clock_speed / 16 / baud_rate - 1;
 4a6:	9c 01       	movw	r18, r24
 4a8:	40 e0       	ldi	r20, 0x00	; 0
 4aa:	50 e0       	ldi	r21, 0x00	; 0
 4ac:	60 e0       	ldi	r22, 0x00	; 0
 4ae:	70 eb       	ldi	r23, 0xB0	; 176
 4b0:	84 e0       	ldi	r24, 0x04	; 4
 4b2:	90 e0       	ldi	r25, 0x00	; 0
 4b4:	0e 94 71 02 	call	0x4e2	; 0x4e2 <__udivmodsi4>
 4b8:	21 50       	subi	r18, 0x01	; 1
	UBRR0H = ubrr >> 8;
 4ba:	10 bc       	out	0x20, r1	; 32
	UBRR0L = ubrr;
 4bc:	29 b9       	out	0x09, r18	; 9
	
	UCSR0B = (1 << RXEN0) | (1 << TXEN0); // enable transmit and receive
 4be:	88 e1       	ldi	r24, 0x18	; 24
 4c0:	8a b9       	out	0x0a, r24	; 10
	UCSR0C = (1 << URSEL0) | (1 << USBS0) | (3 << UCSZ00); // set frame format: 8 bit data, 2 bit stop
 4c2:	8e e8       	ldi	r24, 0x8E	; 142
 4c4:	80 bd       	out	0x20, r24	; 32
	
	fdevopen(put, get); // sets up printf
 4c6:	67 e4       	ldi	r22, 0x47	; 71
 4c8:	72 e0       	ldi	r23, 0x02	; 2
 4ca:	8e e4       	ldi	r24, 0x4E	; 78
 4cc:	92 e0       	ldi	r25, 0x02	; 2
 4ce:	0e 94 93 02 	call	0x526	; 0x526 <fdevopen>
 4d2:	08 95       	ret

000004d4 <init_xmem>:
	}
	printf("SRAM test completed with \n%4d errors in write phase and \n%4d errors in retrieval phase\n\n", write_errors, retrieval_errors);
}

void init_xmem() {
	MCUCR |= 1 << SRE; // enable external memory
 4d4:	85 b7       	in	r24, 0x35	; 53
 4d6:	80 68       	ori	r24, 0x80	; 128
 4d8:	85 bf       	out	0x35, r24	; 53
	SFIOR |= 1 << XMM2; // release JTAG pins from external memory address pins
 4da:	80 b7       	in	r24, 0x30	; 48
 4dc:	80 62       	ori	r24, 0x20	; 32
 4de:	80 bf       	out	0x30, r24	; 48
 4e0:	08 95       	ret

000004e2 <__udivmodsi4>:
 4e2:	a1 e2       	ldi	r26, 0x21	; 33
 4e4:	1a 2e       	mov	r1, r26
 4e6:	aa 1b       	sub	r26, r26
 4e8:	bb 1b       	sub	r27, r27
 4ea:	fd 01       	movw	r30, r26
 4ec:	0d c0       	rjmp	.+26     	; 0x508 <__udivmodsi4_ep>

000004ee <__udivmodsi4_loop>:
 4ee:	aa 1f       	adc	r26, r26
 4f0:	bb 1f       	adc	r27, r27
 4f2:	ee 1f       	adc	r30, r30
 4f4:	ff 1f       	adc	r31, r31
 4f6:	a2 17       	cp	r26, r18
 4f8:	b3 07       	cpc	r27, r19
 4fa:	e4 07       	cpc	r30, r20
 4fc:	f5 07       	cpc	r31, r21
 4fe:	20 f0       	brcs	.+8      	; 0x508 <__udivmodsi4_ep>
 500:	a2 1b       	sub	r26, r18
 502:	b3 0b       	sbc	r27, r19
 504:	e4 0b       	sbc	r30, r20
 506:	f5 0b       	sbc	r31, r21

00000508 <__udivmodsi4_ep>:
 508:	66 1f       	adc	r22, r22
 50a:	77 1f       	adc	r23, r23
 50c:	88 1f       	adc	r24, r24
 50e:	99 1f       	adc	r25, r25
 510:	1a 94       	dec	r1
 512:	69 f7       	brne	.-38     	; 0x4ee <__udivmodsi4_loop>
 514:	60 95       	com	r22
 516:	70 95       	com	r23
 518:	80 95       	com	r24
 51a:	90 95       	com	r25
 51c:	9b 01       	movw	r18, r22
 51e:	ac 01       	movw	r20, r24
 520:	bd 01       	movw	r22, r26
 522:	cf 01       	movw	r24, r30
 524:	08 95       	ret

00000526 <fdevopen>:
 526:	0f 93       	push	r16
 528:	1f 93       	push	r17
 52a:	cf 93       	push	r28
 52c:	df 93       	push	r29
 52e:	00 97       	sbiw	r24, 0x00	; 0
 530:	31 f4       	brne	.+12     	; 0x53e <fdevopen+0x18>
 532:	61 15       	cp	r22, r1
 534:	71 05       	cpc	r23, r1
 536:	19 f4       	brne	.+6      	; 0x53e <fdevopen+0x18>
 538:	80 e0       	ldi	r24, 0x00	; 0
 53a:	90 e0       	ldi	r25, 0x00	; 0
 53c:	3a c0       	rjmp	.+116    	; 0x5b2 <fdevopen+0x8c>
 53e:	8b 01       	movw	r16, r22
 540:	ec 01       	movw	r28, r24
 542:	6e e0       	ldi	r22, 0x0E	; 14
 544:	70 e0       	ldi	r23, 0x00	; 0
 546:	81 e0       	ldi	r24, 0x01	; 1
 548:	90 e0       	ldi	r25, 0x00	; 0
 54a:	0e 94 de 02 	call	0x5bc	; 0x5bc <calloc>
 54e:	fc 01       	movw	r30, r24
 550:	89 2b       	or	r24, r25
 552:	91 f3       	breq	.-28     	; 0x538 <fdevopen+0x12>
 554:	80 e8       	ldi	r24, 0x80	; 128
 556:	83 83       	std	Z+3, r24	; 0x03
 558:	01 15       	cp	r16, r1
 55a:	11 05       	cpc	r17, r1
 55c:	71 f0       	breq	.+28     	; 0x57a <fdevopen+0x54>
 55e:	13 87       	std	Z+11, r17	; 0x0b
 560:	02 87       	std	Z+10, r16	; 0x0a
 562:	81 e8       	ldi	r24, 0x81	; 129
 564:	83 83       	std	Z+3, r24	; 0x03
 566:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__iob>
 56a:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <__iob+0x1>
 56e:	89 2b       	or	r24, r25
 570:	21 f4       	brne	.+8      	; 0x57a <fdevopen+0x54>
 572:	f0 93 0d 01 	sts	0x010D, r31	; 0x80010d <__iob+0x1>
 576:	e0 93 0c 01 	sts	0x010C, r30	; 0x80010c <__iob>
 57a:	20 97       	sbiw	r28, 0x00	; 0
 57c:	c9 f0       	breq	.+50     	; 0x5b0 <fdevopen+0x8a>
 57e:	d1 87       	std	Z+9, r29	; 0x09
 580:	c0 87       	std	Z+8, r28	; 0x08
 582:	83 81       	ldd	r24, Z+3	; 0x03
 584:	82 60       	ori	r24, 0x02	; 2
 586:	83 83       	std	Z+3, r24	; 0x03
 588:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <__iob+0x2>
 58c:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <__iob+0x3>
 590:	89 2b       	or	r24, r25
 592:	71 f4       	brne	.+28     	; 0x5b0 <fdevopen+0x8a>
 594:	f0 93 0f 01 	sts	0x010F, r31	; 0x80010f <__iob+0x3>
 598:	e0 93 0e 01 	sts	0x010E, r30	; 0x80010e <__iob+0x2>
 59c:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__iob+0x4>
 5a0:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <__iob+0x5>
 5a4:	89 2b       	or	r24, r25
 5a6:	21 f4       	brne	.+8      	; 0x5b0 <fdevopen+0x8a>
 5a8:	f0 93 11 01 	sts	0x0111, r31	; 0x800111 <__iob+0x5>
 5ac:	e0 93 10 01 	sts	0x0110, r30	; 0x800110 <__iob+0x4>
 5b0:	cf 01       	movw	r24, r30
 5b2:	df 91       	pop	r29
 5b4:	cf 91       	pop	r28
 5b6:	1f 91       	pop	r17
 5b8:	0f 91       	pop	r16
 5ba:	08 95       	ret

000005bc <calloc>:
 5bc:	0f 93       	push	r16
 5be:	1f 93       	push	r17
 5c0:	cf 93       	push	r28
 5c2:	df 93       	push	r29
 5c4:	86 9f       	mul	r24, r22
 5c6:	80 01       	movw	r16, r0
 5c8:	87 9f       	mul	r24, r23
 5ca:	10 0d       	add	r17, r0
 5cc:	96 9f       	mul	r25, r22
 5ce:	10 0d       	add	r17, r0
 5d0:	11 24       	eor	r1, r1
 5d2:	c8 01       	movw	r24, r16
 5d4:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <malloc>
 5d8:	ec 01       	movw	r28, r24
 5da:	00 97       	sbiw	r24, 0x00	; 0
 5dc:	29 f0       	breq	.+10     	; 0x5e8 <calloc+0x2c>
 5de:	a8 01       	movw	r20, r16
 5e0:	60 e0       	ldi	r22, 0x00	; 0
 5e2:	70 e0       	ldi	r23, 0x00	; 0
 5e4:	0e 94 1b 04 	call	0x836	; 0x836 <memset>
 5e8:	ce 01       	movw	r24, r28
 5ea:	df 91       	pop	r29
 5ec:	cf 91       	pop	r28
 5ee:	1f 91       	pop	r17
 5f0:	0f 91       	pop	r16
 5f2:	08 95       	ret

000005f4 <malloc>:
 5f4:	0f 93       	push	r16
 5f6:	1f 93       	push	r17
 5f8:	cf 93       	push	r28
 5fa:	df 93       	push	r29
 5fc:	82 30       	cpi	r24, 0x02	; 2
 5fe:	91 05       	cpc	r25, r1
 600:	10 f4       	brcc	.+4      	; 0x606 <malloc+0x12>
 602:	82 e0       	ldi	r24, 0x02	; 2
 604:	90 e0       	ldi	r25, 0x00	; 0
 606:	e0 91 14 01 	lds	r30, 0x0114	; 0x800114 <__flp>
 60a:	f0 91 15 01 	lds	r31, 0x0115	; 0x800115 <__flp+0x1>
 60e:	20 e0       	ldi	r18, 0x00	; 0
 610:	30 e0       	ldi	r19, 0x00	; 0
 612:	a0 e0       	ldi	r26, 0x00	; 0
 614:	b0 e0       	ldi	r27, 0x00	; 0
 616:	30 97       	sbiw	r30, 0x00	; 0
 618:	19 f1       	breq	.+70     	; 0x660 <malloc+0x6c>
 61a:	40 81       	ld	r20, Z
 61c:	51 81       	ldd	r21, Z+1	; 0x01
 61e:	02 81       	ldd	r16, Z+2	; 0x02
 620:	13 81       	ldd	r17, Z+3	; 0x03
 622:	48 17       	cp	r20, r24
 624:	59 07       	cpc	r21, r25
 626:	c8 f0       	brcs	.+50     	; 0x65a <malloc+0x66>
 628:	84 17       	cp	r24, r20
 62a:	95 07       	cpc	r25, r21
 62c:	69 f4       	brne	.+26     	; 0x648 <malloc+0x54>
 62e:	10 97       	sbiw	r26, 0x00	; 0
 630:	31 f0       	breq	.+12     	; 0x63e <malloc+0x4a>
 632:	12 96       	adiw	r26, 0x02	; 2
 634:	0c 93       	st	X, r16
 636:	12 97       	sbiw	r26, 0x02	; 2
 638:	13 96       	adiw	r26, 0x03	; 3
 63a:	1c 93       	st	X, r17
 63c:	27 c0       	rjmp	.+78     	; 0x68c <malloc+0x98>
 63e:	00 93 14 01 	sts	0x0114, r16	; 0x800114 <__flp>
 642:	10 93 15 01 	sts	0x0115, r17	; 0x800115 <__flp+0x1>
 646:	22 c0       	rjmp	.+68     	; 0x68c <malloc+0x98>
 648:	21 15       	cp	r18, r1
 64a:	31 05       	cpc	r19, r1
 64c:	19 f0       	breq	.+6      	; 0x654 <malloc+0x60>
 64e:	42 17       	cp	r20, r18
 650:	53 07       	cpc	r21, r19
 652:	18 f4       	brcc	.+6      	; 0x65a <malloc+0x66>
 654:	9a 01       	movw	r18, r20
 656:	bd 01       	movw	r22, r26
 658:	ef 01       	movw	r28, r30
 65a:	df 01       	movw	r26, r30
 65c:	f8 01       	movw	r30, r16
 65e:	db cf       	rjmp	.-74     	; 0x616 <malloc+0x22>
 660:	21 15       	cp	r18, r1
 662:	31 05       	cpc	r19, r1
 664:	f9 f0       	breq	.+62     	; 0x6a4 <malloc+0xb0>
 666:	28 1b       	sub	r18, r24
 668:	39 0b       	sbc	r19, r25
 66a:	24 30       	cpi	r18, 0x04	; 4
 66c:	31 05       	cpc	r19, r1
 66e:	80 f4       	brcc	.+32     	; 0x690 <malloc+0x9c>
 670:	8a 81       	ldd	r24, Y+2	; 0x02
 672:	9b 81       	ldd	r25, Y+3	; 0x03
 674:	61 15       	cp	r22, r1
 676:	71 05       	cpc	r23, r1
 678:	21 f0       	breq	.+8      	; 0x682 <malloc+0x8e>
 67a:	fb 01       	movw	r30, r22
 67c:	93 83       	std	Z+3, r25	; 0x03
 67e:	82 83       	std	Z+2, r24	; 0x02
 680:	04 c0       	rjmp	.+8      	; 0x68a <malloc+0x96>
 682:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <__flp+0x1>
 686:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <__flp>
 68a:	fe 01       	movw	r30, r28
 68c:	32 96       	adiw	r30, 0x02	; 2
 68e:	44 c0       	rjmp	.+136    	; 0x718 <malloc+0x124>
 690:	fe 01       	movw	r30, r28
 692:	e2 0f       	add	r30, r18
 694:	f3 1f       	adc	r31, r19
 696:	81 93       	st	Z+, r24
 698:	91 93       	st	Z+, r25
 69a:	22 50       	subi	r18, 0x02	; 2
 69c:	31 09       	sbc	r19, r1
 69e:	39 83       	std	Y+1, r19	; 0x01
 6a0:	28 83       	st	Y, r18
 6a2:	3a c0       	rjmp	.+116    	; 0x718 <malloc+0x124>
 6a4:	20 91 12 01 	lds	r18, 0x0112	; 0x800112 <__brkval>
 6a8:	30 91 13 01 	lds	r19, 0x0113	; 0x800113 <__brkval+0x1>
 6ac:	23 2b       	or	r18, r19
 6ae:	41 f4       	brne	.+16     	; 0x6c0 <malloc+0xcc>
 6b0:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 6b4:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 6b8:	30 93 13 01 	sts	0x0113, r19	; 0x800113 <__brkval+0x1>
 6bc:	20 93 12 01 	sts	0x0112, r18	; 0x800112 <__brkval>
 6c0:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 6c4:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 6c8:	21 15       	cp	r18, r1
 6ca:	31 05       	cpc	r19, r1
 6cc:	41 f4       	brne	.+16     	; 0x6de <malloc+0xea>
 6ce:	2d b7       	in	r18, 0x3d	; 61
 6d0:	3e b7       	in	r19, 0x3e	; 62
 6d2:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 6d6:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 6da:	24 1b       	sub	r18, r20
 6dc:	35 0b       	sbc	r19, r21
 6de:	e0 91 12 01 	lds	r30, 0x0112	; 0x800112 <__brkval>
 6e2:	f0 91 13 01 	lds	r31, 0x0113	; 0x800113 <__brkval+0x1>
 6e6:	e2 17       	cp	r30, r18
 6e8:	f3 07       	cpc	r31, r19
 6ea:	a0 f4       	brcc	.+40     	; 0x714 <malloc+0x120>
 6ec:	2e 1b       	sub	r18, r30
 6ee:	3f 0b       	sbc	r19, r31
 6f0:	28 17       	cp	r18, r24
 6f2:	39 07       	cpc	r19, r25
 6f4:	78 f0       	brcs	.+30     	; 0x714 <malloc+0x120>
 6f6:	ac 01       	movw	r20, r24
 6f8:	4e 5f       	subi	r20, 0xFE	; 254
 6fa:	5f 4f       	sbci	r21, 0xFF	; 255
 6fc:	24 17       	cp	r18, r20
 6fe:	35 07       	cpc	r19, r21
 700:	48 f0       	brcs	.+18     	; 0x714 <malloc+0x120>
 702:	4e 0f       	add	r20, r30
 704:	5f 1f       	adc	r21, r31
 706:	50 93 13 01 	sts	0x0113, r21	; 0x800113 <__brkval+0x1>
 70a:	40 93 12 01 	sts	0x0112, r20	; 0x800112 <__brkval>
 70e:	81 93       	st	Z+, r24
 710:	91 93       	st	Z+, r25
 712:	02 c0       	rjmp	.+4      	; 0x718 <malloc+0x124>
 714:	e0 e0       	ldi	r30, 0x00	; 0
 716:	f0 e0       	ldi	r31, 0x00	; 0
 718:	cf 01       	movw	r24, r30
 71a:	df 91       	pop	r29
 71c:	cf 91       	pop	r28
 71e:	1f 91       	pop	r17
 720:	0f 91       	pop	r16
 722:	08 95       	ret

00000724 <free>:
 724:	cf 93       	push	r28
 726:	df 93       	push	r29
 728:	00 97       	sbiw	r24, 0x00	; 0
 72a:	09 f4       	brne	.+2      	; 0x72e <free+0xa>
 72c:	81 c0       	rjmp	.+258    	; 0x830 <free+0x10c>
 72e:	fc 01       	movw	r30, r24
 730:	32 97       	sbiw	r30, 0x02	; 2
 732:	13 82       	std	Z+3, r1	; 0x03
 734:	12 82       	std	Z+2, r1	; 0x02
 736:	a0 91 14 01 	lds	r26, 0x0114	; 0x800114 <__flp>
 73a:	b0 91 15 01 	lds	r27, 0x0115	; 0x800115 <__flp+0x1>
 73e:	10 97       	sbiw	r26, 0x00	; 0
 740:	81 f4       	brne	.+32     	; 0x762 <free+0x3e>
 742:	20 81       	ld	r18, Z
 744:	31 81       	ldd	r19, Z+1	; 0x01
 746:	82 0f       	add	r24, r18
 748:	93 1f       	adc	r25, r19
 74a:	20 91 12 01 	lds	r18, 0x0112	; 0x800112 <__brkval>
 74e:	30 91 13 01 	lds	r19, 0x0113	; 0x800113 <__brkval+0x1>
 752:	28 17       	cp	r18, r24
 754:	39 07       	cpc	r19, r25
 756:	51 f5       	brne	.+84     	; 0x7ac <free+0x88>
 758:	f0 93 13 01 	sts	0x0113, r31	; 0x800113 <__brkval+0x1>
 75c:	e0 93 12 01 	sts	0x0112, r30	; 0x800112 <__brkval>
 760:	67 c0       	rjmp	.+206    	; 0x830 <free+0x10c>
 762:	ed 01       	movw	r28, r26
 764:	20 e0       	ldi	r18, 0x00	; 0
 766:	30 e0       	ldi	r19, 0x00	; 0
 768:	ce 17       	cp	r28, r30
 76a:	df 07       	cpc	r29, r31
 76c:	40 f4       	brcc	.+16     	; 0x77e <free+0x5a>
 76e:	4a 81       	ldd	r20, Y+2	; 0x02
 770:	5b 81       	ldd	r21, Y+3	; 0x03
 772:	9e 01       	movw	r18, r28
 774:	41 15       	cp	r20, r1
 776:	51 05       	cpc	r21, r1
 778:	f1 f0       	breq	.+60     	; 0x7b6 <free+0x92>
 77a:	ea 01       	movw	r28, r20
 77c:	f5 cf       	rjmp	.-22     	; 0x768 <free+0x44>
 77e:	d3 83       	std	Z+3, r29	; 0x03
 780:	c2 83       	std	Z+2, r28	; 0x02
 782:	40 81       	ld	r20, Z
 784:	51 81       	ldd	r21, Z+1	; 0x01
 786:	84 0f       	add	r24, r20
 788:	95 1f       	adc	r25, r21
 78a:	c8 17       	cp	r28, r24
 78c:	d9 07       	cpc	r29, r25
 78e:	59 f4       	brne	.+22     	; 0x7a6 <free+0x82>
 790:	88 81       	ld	r24, Y
 792:	99 81       	ldd	r25, Y+1	; 0x01
 794:	84 0f       	add	r24, r20
 796:	95 1f       	adc	r25, r21
 798:	02 96       	adiw	r24, 0x02	; 2
 79a:	91 83       	std	Z+1, r25	; 0x01
 79c:	80 83       	st	Z, r24
 79e:	8a 81       	ldd	r24, Y+2	; 0x02
 7a0:	9b 81       	ldd	r25, Y+3	; 0x03
 7a2:	93 83       	std	Z+3, r25	; 0x03
 7a4:	82 83       	std	Z+2, r24	; 0x02
 7a6:	21 15       	cp	r18, r1
 7a8:	31 05       	cpc	r19, r1
 7aa:	29 f4       	brne	.+10     	; 0x7b6 <free+0x92>
 7ac:	f0 93 15 01 	sts	0x0115, r31	; 0x800115 <__flp+0x1>
 7b0:	e0 93 14 01 	sts	0x0114, r30	; 0x800114 <__flp>
 7b4:	3d c0       	rjmp	.+122    	; 0x830 <free+0x10c>
 7b6:	e9 01       	movw	r28, r18
 7b8:	fb 83       	std	Y+3, r31	; 0x03
 7ba:	ea 83       	std	Y+2, r30	; 0x02
 7bc:	49 91       	ld	r20, Y+
 7be:	59 91       	ld	r21, Y+
 7c0:	c4 0f       	add	r28, r20
 7c2:	d5 1f       	adc	r29, r21
 7c4:	ec 17       	cp	r30, r28
 7c6:	fd 07       	cpc	r31, r29
 7c8:	61 f4       	brne	.+24     	; 0x7e2 <free+0xbe>
 7ca:	80 81       	ld	r24, Z
 7cc:	91 81       	ldd	r25, Z+1	; 0x01
 7ce:	84 0f       	add	r24, r20
 7d0:	95 1f       	adc	r25, r21
 7d2:	02 96       	adiw	r24, 0x02	; 2
 7d4:	e9 01       	movw	r28, r18
 7d6:	99 83       	std	Y+1, r25	; 0x01
 7d8:	88 83       	st	Y, r24
 7da:	82 81       	ldd	r24, Z+2	; 0x02
 7dc:	93 81       	ldd	r25, Z+3	; 0x03
 7de:	9b 83       	std	Y+3, r25	; 0x03
 7e0:	8a 83       	std	Y+2, r24	; 0x02
 7e2:	e0 e0       	ldi	r30, 0x00	; 0
 7e4:	f0 e0       	ldi	r31, 0x00	; 0
 7e6:	12 96       	adiw	r26, 0x02	; 2
 7e8:	8d 91       	ld	r24, X+
 7ea:	9c 91       	ld	r25, X
 7ec:	13 97       	sbiw	r26, 0x03	; 3
 7ee:	00 97       	sbiw	r24, 0x00	; 0
 7f0:	19 f0       	breq	.+6      	; 0x7f8 <free+0xd4>
 7f2:	fd 01       	movw	r30, r26
 7f4:	dc 01       	movw	r26, r24
 7f6:	f7 cf       	rjmp	.-18     	; 0x7e6 <free+0xc2>
 7f8:	8d 91       	ld	r24, X+
 7fa:	9c 91       	ld	r25, X
 7fc:	11 97       	sbiw	r26, 0x01	; 1
 7fe:	9d 01       	movw	r18, r26
 800:	2e 5f       	subi	r18, 0xFE	; 254
 802:	3f 4f       	sbci	r19, 0xFF	; 255
 804:	82 0f       	add	r24, r18
 806:	93 1f       	adc	r25, r19
 808:	20 91 12 01 	lds	r18, 0x0112	; 0x800112 <__brkval>
 80c:	30 91 13 01 	lds	r19, 0x0113	; 0x800113 <__brkval+0x1>
 810:	28 17       	cp	r18, r24
 812:	39 07       	cpc	r19, r25
 814:	69 f4       	brne	.+26     	; 0x830 <free+0x10c>
 816:	30 97       	sbiw	r30, 0x00	; 0
 818:	29 f4       	brne	.+10     	; 0x824 <free+0x100>
 81a:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <__flp+0x1>
 81e:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <__flp>
 822:	02 c0       	rjmp	.+4      	; 0x828 <free+0x104>
 824:	13 82       	std	Z+3, r1	; 0x03
 826:	12 82       	std	Z+2, r1	; 0x02
 828:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <__brkval+0x1>
 82c:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <__brkval>
 830:	df 91       	pop	r29
 832:	cf 91       	pop	r28
 834:	08 95       	ret

00000836 <memset>:
 836:	dc 01       	movw	r26, r24
 838:	01 c0       	rjmp	.+2      	; 0x83c <memset+0x6>
 83a:	6d 93       	st	X+, r22
 83c:	41 50       	subi	r20, 0x01	; 1
 83e:	50 40       	sbci	r21, 0x00	; 0
 840:	e0 f7       	brcc	.-8      	; 0x83a <memset+0x4>
 842:	08 95       	ret

00000844 <_exit>:
 844:	f8 94       	cli

00000846 <__stop_program>:
 846:	ff cf       	rjmp	.-2      	; 0x846 <__stop_program>
