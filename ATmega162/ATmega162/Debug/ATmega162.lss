
ATmega162.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000f0  00800100  00000cdc  00000d70  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000cdc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  008001f0  008001f0  00000e60  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e60  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000ebc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000ef8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000aa8  00000000  00000000  00000f80  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000837  00000000  00000000  00001a28  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004a1  00000000  00000000  0000225f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000130  00000000  00000000  00002700  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000418  00000000  00000000  00002830  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000268  00000000  00000000  00002c48  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  00002eb0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ec ed       	ldi	r30, 0xDC	; 220
  84:	fc e0       	ldi	r31, 0x0C	; 12
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a0 3f       	cpi	r26, 0xF0	; 240
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a0 ef       	ldi	r26, 0xF0	; 240
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	aa 3f       	cpi	r26, 0xFA	; 250
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 57 00 	call	0xae	; 0xae <main>
  a6:	0c 94 6c 06 	jmp	0xcd8	; 0xcd8 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <main>:
#include "uart.h"
#include "utils.h"

int main()
{
	uart_init(9600);
  ae:	80 e8       	ldi	r24, 0x80	; 128
  b0:	95 e2       	ldi	r25, 0x25	; 37
  b2:	0e 94 6f 00 	call	0xde	; 0xde <uart_init>
	init_xmem();
  b6:	0e 94 09 01 	call	0x212	; 0x212 <init_xmem>
	test_sram();
  ba:	0e 94 86 00 	call	0x10c	; 0x10c <test_sram>
	
	DDRD |= 1 << 5;
  be:	8d 9a       	sbi	0x11, 5	; 17
}
  c0:	80 e0       	ldi	r24, 0x00	; 0
  c2:	90 e0       	ldi	r25, 0x00	; 0
  c4:	08 95       	ret

000000c6 <get>:

// copy from datasheet
unsigned char uart_recieve() {
	while (!(UCSR0A & (1<<RXC0)));
	return UDR0;
}
  c6:	80 e0       	ldi	r24, 0x00	; 0
  c8:	90 e0       	ldi	r25, 0x00	; 0
  ca:	08 95       	ret

000000cc <uart_transmit>:
  cc:	5d 9b       	sbis	0x0b, 5	; 11
  ce:	fe cf       	rjmp	.-4      	; 0xcc <uart_transmit>
  d0:	8c b9       	out	0x0c, r24	; 12
  d2:	08 95       	ret

000000d4 <put>:
  d4:	0e 94 66 00 	call	0xcc	; 0xcc <uart_transmit>
  d8:	80 e0       	ldi	r24, 0x00	; 0
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	08 95       	ret

000000de <uart_init>:

// copy from datasheet
void uart_init(unsigned int baud_rate) {
	// set baud rate
	unsigned long clock_speed = 4915200;
	unsigned char ubrr = clock_speed / 16 / baud_rate - 1;
  de:	9c 01       	movw	r18, r24
  e0:	40 e0       	ldi	r20, 0x00	; 0
  e2:	50 e0       	ldi	r21, 0x00	; 0
  e4:	60 e0       	ldi	r22, 0x00	; 0
  e6:	70 eb       	ldi	r23, 0xB0	; 176
  e8:	84 e0       	ldi	r24, 0x04	; 4
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	0e 94 10 01 	call	0x220	; 0x220 <__udivmodsi4>
  f0:	21 50       	subi	r18, 0x01	; 1
	UBRR0H = ubrr >> 8;
  f2:	10 bc       	out	0x20, r1	; 32
	UBRR0L = ubrr;
  f4:	29 b9       	out	0x09, r18	; 9
	
	UCSR0B = (1 << RXEN0) | (1 << TXEN0); // enable transmit and receive
  f6:	88 e1       	ldi	r24, 0x18	; 24
  f8:	8a b9       	out	0x0a, r24	; 10
	UCSR0C = (1 << URSEL0) | (1 << USBS0) | (3 << UCSZ00); // set frame format: 8 bit data, 2 bit stop
  fa:	8e e8       	ldi	r24, 0x8E	; 142
  fc:	80 bd       	out	0x20, r24	; 32
	
	fdevopen(put, get); // sets up printf
  fe:	63 e6       	ldi	r22, 0x63	; 99
 100:	70 e0       	ldi	r23, 0x00	; 0
 102:	8a e6       	ldi	r24, 0x6A	; 106
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	0e 94 8e 01 	call	0x31c	; 0x31c <fdevopen>
 10a:	08 95       	ret

0000010c <test_sram>:

#include <avr/io.h>
#include <stdio.h>
#include <stdlib.h>

void test_sram() {
 10c:	cf 92       	push	r12
 10e:	df 92       	push	r13
 110:	ef 92       	push	r14
 112:	ff 92       	push	r15
 114:	0f 93       	push	r16
 116:	1f 93       	push	r17
 118:	cf 93       	push	r28
 11a:	df 93       	push	r29
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
	printf("Starting SRAM test...\n");
 11c:	8a e0       	ldi	r24, 0x0A	; 10
 11e:	91 e0       	ldi	r25, 0x01	; 1
 120:	0e 94 ef 01 	call	0x3de	; 0x3de <puts>
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
 124:	0e 94 7e 01 	call	0x2fc	; 0x2fc <rand>
 128:	7c 01       	movw	r14, r24
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
 12a:	0e 94 83 01 	call	0x306	; 0x306 <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 12e:	c1 2c       	mov	r12, r1
 130:	d1 2c       	mov	r13, r1
#include <stdlib.h>

void test_sram() {
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
 132:	00 e0       	ldi	r16, 0x00	; 0
 134:	10 e0       	ldi	r17, 0x00	; 0
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
		ext_ram[i] = some_value;
		uint8_t retreived_value = ext_ram[i];
		if (retreived_value != some_value) {
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
 136:	c0 e2       	ldi	r28, 0x20	; 32
 138:	d1 e0       	ldi	r29, 0x01	; 1
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
 13a:	0e 94 7e 01 	call	0x2fc	; 0x2fc <rand>
 13e:	f6 01       	movw	r30, r12
 140:	f8 5e       	subi	r31, 0xE8	; 232
		ext_ram[i] = some_value;
 142:	80 83       	st	Z, r24
		uint8_t retreived_value = ext_ram[i];
 144:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
 146:	28 17       	cp	r18, r24
 148:	a9 f0       	breq	.+42     	; 0x174 <test_sram+0x68>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
 14a:	99 27       	eor	r25, r25
 14c:	9f 93       	push	r25
 14e:	8f 93       	push	r24
 150:	1f 92       	push	r1
 152:	2f 93       	push	r18
 154:	df 92       	push	r13
 156:	cf 92       	push	r12
 158:	df 93       	push	r29
 15a:	cf 93       	push	r28
 15c:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <printf>
			write_errors++;
 160:	0f 5f       	subi	r16, 0xFF	; 255
 162:	1f 4f       	sbci	r17, 0xFF	; 255
 164:	8d b7       	in	r24, 0x3d	; 61
 166:	9e b7       	in	r25, 0x3e	; 62
 168:	08 96       	adiw	r24, 0x08	; 8
 16a:	0f b6       	in	r0, 0x3f	; 63
 16c:	f8 94       	cli
 16e:	9e bf       	out	0x3e, r25	; 62
 170:	0f be       	out	0x3f, r0	; 63
 172:	8d bf       	out	0x3d, r24	; 61
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 174:	9f ef       	ldi	r25, 0xFF	; 255
 176:	c9 1a       	sub	r12, r25
 178:	d9 0a       	sbc	r13, r25
 17a:	c1 14       	cp	r12, r1
 17c:	88 e0       	ldi	r24, 0x08	; 8
 17e:	d8 06       	cpc	r13, r24
 180:	e1 f6       	brne	.-72     	; 0x13a <test_sram+0x2e>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
			write_errors++;
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
 182:	c7 01       	movw	r24, r14
 184:	0e 94 83 01 	call	0x306	; 0x306 <srand>
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 188:	c0 e0       	ldi	r28, 0x00	; 0
 18a:	d0 e0       	ldi	r29, 0x00	; 0

void test_sram() {
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
 18c:	e1 2c       	mov	r14, r1
 18e:	f1 2c       	mov	r15, r1
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
		uint8_t retreived_value = ext_ram[i];
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
 190:	0f 2e       	mov	r0, r31
 192:	f9 e5       	ldi	r31, 0x59	; 89
 194:	cf 2e       	mov	r12, r31
 196:	f1 e0       	ldi	r31, 0x01	; 1
 198:	df 2e       	mov	r13, r31
 19a:	f0 2d       	mov	r31, r0
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
 19c:	0e 94 7e 01 	call	0x2fc	; 0x2fc <rand>
 1a0:	fe 01       	movw	r30, r28
 1a2:	f8 5e       	subi	r31, 0xE8	; 232
		uint8_t retreived_value = ext_ram[i];
 1a4:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
 1a6:	28 17       	cp	r18, r24
 1a8:	b1 f0       	breq	.+44     	; 0x1d6 <test_sram+0xca>
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
 1aa:	99 27       	eor	r25, r25
 1ac:	9f 93       	push	r25
 1ae:	8f 93       	push	r24
 1b0:	1f 92       	push	r1
 1b2:	2f 93       	push	r18
 1b4:	df 93       	push	r29
 1b6:	cf 93       	push	r28
 1b8:	df 92       	push	r13
 1ba:	cf 92       	push	r12
 1bc:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <printf>
			retrieval_errors++;
 1c0:	9f ef       	ldi	r25, 0xFF	; 255
 1c2:	e9 1a       	sub	r14, r25
 1c4:	f9 0a       	sbc	r15, r25
 1c6:	8d b7       	in	r24, 0x3d	; 61
 1c8:	9e b7       	in	r25, 0x3e	; 62
 1ca:	08 96       	adiw	r24, 0x08	; 8
 1cc:	0f b6       	in	r0, 0x3f	; 63
 1ce:	f8 94       	cli
 1d0:	9e bf       	out	0x3e, r25	; 62
 1d2:	0f be       	out	0x3f, r0	; 63
 1d4:	8d bf       	out	0x3d, r24	; 61
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 1d6:	21 96       	adiw	r28, 0x01	; 1
 1d8:	c1 15       	cp	r28, r1
 1da:	98 e0       	ldi	r25, 0x08	; 8
 1dc:	d9 07       	cpc	r29, r25
 1de:	f1 f6       	brne	.-68     	; 0x19c <test_sram+0x90>
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
			retrieval_errors++;
		}
	}
	printf("SRAM test completed with \n%4d errors in write phase and \n%4d errors in retrieval phase\n\n", write_errors, retrieval_errors);
 1e0:	ff 92       	push	r15
 1e2:	ef 92       	push	r14
 1e4:	1f 93       	push	r17
 1e6:	0f 93       	push	r16
 1e8:	86 e9       	ldi	r24, 0x96	; 150
 1ea:	91 e0       	ldi	r25, 0x01	; 1
 1ec:	9f 93       	push	r25
 1ee:	8f 93       	push	r24
 1f0:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <printf>
}
 1f4:	0f 90       	pop	r0
 1f6:	0f 90       	pop	r0
 1f8:	0f 90       	pop	r0
 1fa:	0f 90       	pop	r0
 1fc:	0f 90       	pop	r0
 1fe:	0f 90       	pop	r0
 200:	df 91       	pop	r29
 202:	cf 91       	pop	r28
 204:	1f 91       	pop	r17
 206:	0f 91       	pop	r16
 208:	ff 90       	pop	r15
 20a:	ef 90       	pop	r14
 20c:	df 90       	pop	r13
 20e:	cf 90       	pop	r12
 210:	08 95       	ret

00000212 <init_xmem>:

void init_xmem() {
	MCUCR |= 1 << SRE; // enable external memory
 212:	85 b7       	in	r24, 0x35	; 53
 214:	80 68       	ori	r24, 0x80	; 128
 216:	85 bf       	out	0x35, r24	; 53
	SFIOR |= 1 << XMM2; // release JTAG pins from external memory address pins
 218:	80 b7       	in	r24, 0x30	; 48
 21a:	80 62       	ori	r24, 0x20	; 32
 21c:	80 bf       	out	0x30, r24	; 48
 21e:	08 95       	ret

00000220 <__udivmodsi4>:
 220:	a1 e2       	ldi	r26, 0x21	; 33
 222:	1a 2e       	mov	r1, r26
 224:	aa 1b       	sub	r26, r26
 226:	bb 1b       	sub	r27, r27
 228:	fd 01       	movw	r30, r26
 22a:	0d c0       	rjmp	.+26     	; 0x246 <__udivmodsi4_ep>

0000022c <__udivmodsi4_loop>:
 22c:	aa 1f       	adc	r26, r26
 22e:	bb 1f       	adc	r27, r27
 230:	ee 1f       	adc	r30, r30
 232:	ff 1f       	adc	r31, r31
 234:	a2 17       	cp	r26, r18
 236:	b3 07       	cpc	r27, r19
 238:	e4 07       	cpc	r30, r20
 23a:	f5 07       	cpc	r31, r21
 23c:	20 f0       	brcs	.+8      	; 0x246 <__udivmodsi4_ep>
 23e:	a2 1b       	sub	r26, r18
 240:	b3 0b       	sbc	r27, r19
 242:	e4 0b       	sbc	r30, r20
 244:	f5 0b       	sbc	r31, r21

00000246 <__udivmodsi4_ep>:
 246:	66 1f       	adc	r22, r22
 248:	77 1f       	adc	r23, r23
 24a:	88 1f       	adc	r24, r24
 24c:	99 1f       	adc	r25, r25
 24e:	1a 94       	dec	r1
 250:	69 f7       	brne	.-38     	; 0x22c <__udivmodsi4_loop>
 252:	60 95       	com	r22
 254:	70 95       	com	r23
 256:	80 95       	com	r24
 258:	90 95       	com	r25
 25a:	9b 01       	movw	r18, r22
 25c:	ac 01       	movw	r20, r24
 25e:	bd 01       	movw	r22, r26
 260:	cf 01       	movw	r24, r30
 262:	08 95       	ret

00000264 <do_rand>:
 264:	8f 92       	push	r8
 266:	9f 92       	push	r9
 268:	af 92       	push	r10
 26a:	bf 92       	push	r11
 26c:	cf 92       	push	r12
 26e:	df 92       	push	r13
 270:	ef 92       	push	r14
 272:	ff 92       	push	r15
 274:	cf 93       	push	r28
 276:	df 93       	push	r29
 278:	ec 01       	movw	r28, r24
 27a:	68 81       	ld	r22, Y
 27c:	79 81       	ldd	r23, Y+1	; 0x01
 27e:	8a 81       	ldd	r24, Y+2	; 0x02
 280:	9b 81       	ldd	r25, Y+3	; 0x03
 282:	61 15       	cp	r22, r1
 284:	71 05       	cpc	r23, r1
 286:	81 05       	cpc	r24, r1
 288:	91 05       	cpc	r25, r1
 28a:	21 f4       	brne	.+8      	; 0x294 <do_rand+0x30>
 28c:	64 e2       	ldi	r22, 0x24	; 36
 28e:	79 ed       	ldi	r23, 0xD9	; 217
 290:	8b e5       	ldi	r24, 0x5B	; 91
 292:	97 e0       	ldi	r25, 0x07	; 7
 294:	2d e1       	ldi	r18, 0x1D	; 29
 296:	33 ef       	ldi	r19, 0xF3	; 243
 298:	41 e0       	ldi	r20, 0x01	; 1
 29a:	50 e0       	ldi	r21, 0x00	; 0
 29c:	0e 94 f4 05 	call	0xbe8	; 0xbe8 <__divmodsi4>
 2a0:	49 01       	movw	r8, r18
 2a2:	5a 01       	movw	r10, r20
 2a4:	9b 01       	movw	r18, r22
 2a6:	ac 01       	movw	r20, r24
 2a8:	a7 ea       	ldi	r26, 0xA7	; 167
 2aa:	b1 e4       	ldi	r27, 0x41	; 65
 2ac:	0e 94 13 06 	call	0xc26	; 0xc26 <__muluhisi3>
 2b0:	6b 01       	movw	r12, r22
 2b2:	7c 01       	movw	r14, r24
 2b4:	ac ee       	ldi	r26, 0xEC	; 236
 2b6:	b4 ef       	ldi	r27, 0xF4	; 244
 2b8:	a5 01       	movw	r20, r10
 2ba:	94 01       	movw	r18, r8
 2bc:	0e 94 21 06 	call	0xc42	; 0xc42 <__mulohisi3>
 2c0:	dc 01       	movw	r26, r24
 2c2:	cb 01       	movw	r24, r22
 2c4:	8c 0d       	add	r24, r12
 2c6:	9d 1d       	adc	r25, r13
 2c8:	ae 1d       	adc	r26, r14
 2ca:	bf 1d       	adc	r27, r15
 2cc:	b7 ff       	sbrs	r27, 7
 2ce:	03 c0       	rjmp	.+6      	; 0x2d6 <do_rand+0x72>
 2d0:	01 97       	sbiw	r24, 0x01	; 1
 2d2:	a1 09       	sbc	r26, r1
 2d4:	b0 48       	sbci	r27, 0x80	; 128
 2d6:	88 83       	st	Y, r24
 2d8:	99 83       	std	Y+1, r25	; 0x01
 2da:	aa 83       	std	Y+2, r26	; 0x02
 2dc:	bb 83       	std	Y+3, r27	; 0x03
 2de:	9f 77       	andi	r25, 0x7F	; 127
 2e0:	df 91       	pop	r29
 2e2:	cf 91       	pop	r28
 2e4:	ff 90       	pop	r15
 2e6:	ef 90       	pop	r14
 2e8:	df 90       	pop	r13
 2ea:	cf 90       	pop	r12
 2ec:	bf 90       	pop	r11
 2ee:	af 90       	pop	r10
 2f0:	9f 90       	pop	r9
 2f2:	8f 90       	pop	r8
 2f4:	08 95       	ret

000002f6 <rand_r>:
 2f6:	0e 94 32 01 	call	0x264	; 0x264 <do_rand>
 2fa:	08 95       	ret

000002fc <rand>:
 2fc:	80 e0       	ldi	r24, 0x00	; 0
 2fe:	91 e0       	ldi	r25, 0x01	; 1
 300:	0e 94 32 01 	call	0x264	; 0x264 <do_rand>
 304:	08 95       	ret

00000306 <srand>:
 306:	a0 e0       	ldi	r26, 0x00	; 0
 308:	b0 e0       	ldi	r27, 0x00	; 0
 30a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 30e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 312:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
 316:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
 31a:	08 95       	ret

0000031c <fdevopen>:
 31c:	0f 93       	push	r16
 31e:	1f 93       	push	r17
 320:	cf 93       	push	r28
 322:	df 93       	push	r29
 324:	00 97       	sbiw	r24, 0x00	; 0
 326:	31 f4       	brne	.+12     	; 0x334 <fdevopen+0x18>
 328:	61 15       	cp	r22, r1
 32a:	71 05       	cpc	r23, r1
 32c:	19 f4       	brne	.+6      	; 0x334 <fdevopen+0x18>
 32e:	80 e0       	ldi	r24, 0x00	; 0
 330:	90 e0       	ldi	r25, 0x00	; 0
 332:	3a c0       	rjmp	.+116    	; 0x3a8 <fdevopen+0x8c>
 334:	8b 01       	movw	r16, r22
 336:	ec 01       	movw	r28, r24
 338:	6e e0       	ldi	r22, 0x0E	; 14
 33a:	70 e0       	ldi	r23, 0x00	; 0
 33c:	81 e0       	ldi	r24, 0x01	; 1
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	0e 94 00 04 	call	0x800	; 0x800 <calloc>
 344:	fc 01       	movw	r30, r24
 346:	89 2b       	or	r24, r25
 348:	91 f3       	breq	.-28     	; 0x32e <fdevopen+0x12>
 34a:	80 e8       	ldi	r24, 0x80	; 128
 34c:	83 83       	std	Z+3, r24	; 0x03
 34e:	01 15       	cp	r16, r1
 350:	11 05       	cpc	r17, r1
 352:	71 f0       	breq	.+28     	; 0x370 <fdevopen+0x54>
 354:	13 87       	std	Z+11, r17	; 0x0b
 356:	02 87       	std	Z+10, r16	; 0x0a
 358:	81 e8       	ldi	r24, 0x81	; 129
 35a:	83 83       	std	Z+3, r24	; 0x03
 35c:	80 91 f0 01 	lds	r24, 0x01F0	; 0x8001f0 <__data_end>
 360:	90 91 f1 01 	lds	r25, 0x01F1	; 0x8001f1 <__data_end+0x1>
 364:	89 2b       	or	r24, r25
 366:	21 f4       	brne	.+8      	; 0x370 <fdevopen+0x54>
 368:	f0 93 f1 01 	sts	0x01F1, r31	; 0x8001f1 <__data_end+0x1>
 36c:	e0 93 f0 01 	sts	0x01F0, r30	; 0x8001f0 <__data_end>
 370:	20 97       	sbiw	r28, 0x00	; 0
 372:	c9 f0       	breq	.+50     	; 0x3a6 <fdevopen+0x8a>
 374:	d1 87       	std	Z+9, r29	; 0x09
 376:	c0 87       	std	Z+8, r28	; 0x08
 378:	83 81       	ldd	r24, Z+3	; 0x03
 37a:	82 60       	ori	r24, 0x02	; 2
 37c:	83 83       	std	Z+3, r24	; 0x03
 37e:	80 91 f2 01 	lds	r24, 0x01F2	; 0x8001f2 <__data_end+0x2>
 382:	90 91 f3 01 	lds	r25, 0x01F3	; 0x8001f3 <__data_end+0x3>
 386:	89 2b       	or	r24, r25
 388:	71 f4       	brne	.+28     	; 0x3a6 <fdevopen+0x8a>
 38a:	f0 93 f3 01 	sts	0x01F3, r31	; 0x8001f3 <__data_end+0x3>
 38e:	e0 93 f2 01 	sts	0x01F2, r30	; 0x8001f2 <__data_end+0x2>
 392:	80 91 f4 01 	lds	r24, 0x01F4	; 0x8001f4 <__data_end+0x4>
 396:	90 91 f5 01 	lds	r25, 0x01F5	; 0x8001f5 <__data_end+0x5>
 39a:	89 2b       	or	r24, r25
 39c:	21 f4       	brne	.+8      	; 0x3a6 <fdevopen+0x8a>
 39e:	f0 93 f5 01 	sts	0x01F5, r31	; 0x8001f5 <__data_end+0x5>
 3a2:	e0 93 f4 01 	sts	0x01F4, r30	; 0x8001f4 <__data_end+0x4>
 3a6:	cf 01       	movw	r24, r30
 3a8:	df 91       	pop	r29
 3aa:	cf 91       	pop	r28
 3ac:	1f 91       	pop	r17
 3ae:	0f 91       	pop	r16
 3b0:	08 95       	ret

000003b2 <printf>:
 3b2:	a0 e0       	ldi	r26, 0x00	; 0
 3b4:	b0 e0       	ldi	r27, 0x00	; 0
 3b6:	ef ed       	ldi	r30, 0xDF	; 223
 3b8:	f1 e0       	ldi	r31, 0x01	; 1
 3ba:	0c 94 36 06 	jmp	0xc6c	; 0xc6c <__prologue_saves__+0x20>
 3be:	ae 01       	movw	r20, r28
 3c0:	4b 5f       	subi	r20, 0xFB	; 251
 3c2:	5f 4f       	sbci	r21, 0xFF	; 255
 3c4:	fa 01       	movw	r30, r20
 3c6:	61 91       	ld	r22, Z+
 3c8:	71 91       	ld	r23, Z+
 3ca:	af 01       	movw	r20, r30
 3cc:	80 91 f2 01 	lds	r24, 0x01F2	; 0x8001f2 <__data_end+0x2>
 3d0:	90 91 f3 01 	lds	r25, 0x01F3	; 0x8001f3 <__data_end+0x3>
 3d4:	0e 94 1f 02 	call	0x43e	; 0x43e <vfprintf>
 3d8:	e2 e0       	ldi	r30, 0x02	; 2
 3da:	0c 94 52 06 	jmp	0xca4	; 0xca4 <__epilogue_restores__+0x20>

000003de <puts>:
 3de:	0f 93       	push	r16
 3e0:	1f 93       	push	r17
 3e2:	cf 93       	push	r28
 3e4:	df 93       	push	r29
 3e6:	e0 91 f2 01 	lds	r30, 0x01F2	; 0x8001f2 <__data_end+0x2>
 3ea:	f0 91 f3 01 	lds	r31, 0x01F3	; 0x8001f3 <__data_end+0x3>
 3ee:	23 81       	ldd	r18, Z+3	; 0x03
 3f0:	21 ff       	sbrs	r18, 1
 3f2:	1b c0       	rjmp	.+54     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 3f4:	8c 01       	movw	r16, r24
 3f6:	d0 e0       	ldi	r29, 0x00	; 0
 3f8:	c0 e0       	ldi	r28, 0x00	; 0
 3fa:	f8 01       	movw	r30, r16
 3fc:	81 91       	ld	r24, Z+
 3fe:	8f 01       	movw	r16, r30
 400:	60 91 f2 01 	lds	r22, 0x01F2	; 0x8001f2 <__data_end+0x2>
 404:	70 91 f3 01 	lds	r23, 0x01F3	; 0x8001f3 <__data_end+0x3>
 408:	db 01       	movw	r26, r22
 40a:	18 96       	adiw	r26, 0x08	; 8
 40c:	ed 91       	ld	r30, X+
 40e:	fc 91       	ld	r31, X
 410:	19 97       	sbiw	r26, 0x09	; 9
 412:	88 23       	and	r24, r24
 414:	31 f0       	breq	.+12     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 416:	09 95       	icall
 418:	89 2b       	or	r24, r25
 41a:	79 f3       	breq	.-34     	; 0x3fa <puts+0x1c>
 41c:	df ef       	ldi	r29, 0xFF	; 255
 41e:	cf ef       	ldi	r28, 0xFF	; 255
 420:	ec cf       	rjmp	.-40     	; 0x3fa <puts+0x1c>
 422:	8a e0       	ldi	r24, 0x0A	; 10
 424:	09 95       	icall
 426:	89 2b       	or	r24, r25
 428:	19 f0       	breq	.+6      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 42a:	8f ef       	ldi	r24, 0xFF	; 255
 42c:	9f ef       	ldi	r25, 0xFF	; 255
 42e:	02 c0       	rjmp	.+4      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 430:	8d 2f       	mov	r24, r29
 432:	9c 2f       	mov	r25, r28
 434:	df 91       	pop	r29
 436:	cf 91       	pop	r28
 438:	1f 91       	pop	r17
 43a:	0f 91       	pop	r16
 43c:	08 95       	ret

0000043e <vfprintf>:
 43e:	ab e0       	ldi	r26, 0x0B	; 11
 440:	b0 e0       	ldi	r27, 0x00	; 0
 442:	e5 e2       	ldi	r30, 0x25	; 37
 444:	f2 e0       	ldi	r31, 0x02	; 2
 446:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__prologue_saves__>
 44a:	6c 01       	movw	r12, r24
 44c:	7b 01       	movw	r14, r22
 44e:	8a 01       	movw	r16, r20
 450:	fc 01       	movw	r30, r24
 452:	17 82       	std	Z+7, r1	; 0x07
 454:	16 82       	std	Z+6, r1	; 0x06
 456:	83 81       	ldd	r24, Z+3	; 0x03
 458:	81 ff       	sbrs	r24, 1
 45a:	cc c1       	rjmp	.+920    	; 0x7f4 <__stack+0x2f5>
 45c:	ce 01       	movw	r24, r28
 45e:	01 96       	adiw	r24, 0x01	; 1
 460:	3c 01       	movw	r6, r24
 462:	f6 01       	movw	r30, r12
 464:	93 81       	ldd	r25, Z+3	; 0x03
 466:	f7 01       	movw	r30, r14
 468:	93 fd       	sbrc	r25, 3
 46a:	85 91       	lpm	r24, Z+
 46c:	93 ff       	sbrs	r25, 3
 46e:	81 91       	ld	r24, Z+
 470:	7f 01       	movw	r14, r30
 472:	88 23       	and	r24, r24
 474:	09 f4       	brne	.+2      	; 0x478 <vfprintf+0x3a>
 476:	ba c1       	rjmp	.+884    	; 0x7ec <__stack+0x2ed>
 478:	85 32       	cpi	r24, 0x25	; 37
 47a:	39 f4       	brne	.+14     	; 0x48a <vfprintf+0x4c>
 47c:	93 fd       	sbrc	r25, 3
 47e:	85 91       	lpm	r24, Z+
 480:	93 ff       	sbrs	r25, 3
 482:	81 91       	ld	r24, Z+
 484:	7f 01       	movw	r14, r30
 486:	85 32       	cpi	r24, 0x25	; 37
 488:	29 f4       	brne	.+10     	; 0x494 <vfprintf+0x56>
 48a:	b6 01       	movw	r22, r12
 48c:	90 e0       	ldi	r25, 0x00	; 0
 48e:	0e 94 5a 05 	call	0xab4	; 0xab4 <fputc>
 492:	e7 cf       	rjmp	.-50     	; 0x462 <vfprintf+0x24>
 494:	91 2c       	mov	r9, r1
 496:	21 2c       	mov	r2, r1
 498:	31 2c       	mov	r3, r1
 49a:	ff e1       	ldi	r31, 0x1F	; 31
 49c:	f3 15       	cp	r31, r3
 49e:	d8 f0       	brcs	.+54     	; 0x4d6 <vfprintf+0x98>
 4a0:	8b 32       	cpi	r24, 0x2B	; 43
 4a2:	79 f0       	breq	.+30     	; 0x4c2 <vfprintf+0x84>
 4a4:	38 f4       	brcc	.+14     	; 0x4b4 <vfprintf+0x76>
 4a6:	80 32       	cpi	r24, 0x20	; 32
 4a8:	79 f0       	breq	.+30     	; 0x4c8 <vfprintf+0x8a>
 4aa:	83 32       	cpi	r24, 0x23	; 35
 4ac:	a1 f4       	brne	.+40     	; 0x4d6 <vfprintf+0x98>
 4ae:	23 2d       	mov	r18, r3
 4b0:	20 61       	ori	r18, 0x10	; 16
 4b2:	1d c0       	rjmp	.+58     	; 0x4ee <vfprintf+0xb0>
 4b4:	8d 32       	cpi	r24, 0x2D	; 45
 4b6:	61 f0       	breq	.+24     	; 0x4d0 <vfprintf+0x92>
 4b8:	80 33       	cpi	r24, 0x30	; 48
 4ba:	69 f4       	brne	.+26     	; 0x4d6 <vfprintf+0x98>
 4bc:	23 2d       	mov	r18, r3
 4be:	21 60       	ori	r18, 0x01	; 1
 4c0:	16 c0       	rjmp	.+44     	; 0x4ee <vfprintf+0xb0>
 4c2:	83 2d       	mov	r24, r3
 4c4:	82 60       	ori	r24, 0x02	; 2
 4c6:	38 2e       	mov	r3, r24
 4c8:	e3 2d       	mov	r30, r3
 4ca:	e4 60       	ori	r30, 0x04	; 4
 4cc:	3e 2e       	mov	r3, r30
 4ce:	2a c0       	rjmp	.+84     	; 0x524 <__stack+0x25>
 4d0:	f3 2d       	mov	r31, r3
 4d2:	f8 60       	ori	r31, 0x08	; 8
 4d4:	1d c0       	rjmp	.+58     	; 0x510 <__stack+0x11>
 4d6:	37 fc       	sbrc	r3, 7
 4d8:	2d c0       	rjmp	.+90     	; 0x534 <__stack+0x35>
 4da:	20 ed       	ldi	r18, 0xD0	; 208
 4dc:	28 0f       	add	r18, r24
 4de:	2a 30       	cpi	r18, 0x0A	; 10
 4e0:	40 f0       	brcs	.+16     	; 0x4f2 <vfprintf+0xb4>
 4e2:	8e 32       	cpi	r24, 0x2E	; 46
 4e4:	b9 f4       	brne	.+46     	; 0x514 <__stack+0x15>
 4e6:	36 fc       	sbrc	r3, 6
 4e8:	81 c1       	rjmp	.+770    	; 0x7ec <__stack+0x2ed>
 4ea:	23 2d       	mov	r18, r3
 4ec:	20 64       	ori	r18, 0x40	; 64
 4ee:	32 2e       	mov	r3, r18
 4f0:	19 c0       	rjmp	.+50     	; 0x524 <__stack+0x25>
 4f2:	36 fe       	sbrs	r3, 6
 4f4:	06 c0       	rjmp	.+12     	; 0x502 <__stack+0x3>
 4f6:	8a e0       	ldi	r24, 0x0A	; 10
 4f8:	98 9e       	mul	r9, r24
 4fa:	20 0d       	add	r18, r0
 4fc:	11 24       	eor	r1, r1
 4fe:	92 2e       	mov	r9, r18
 500:	11 c0       	rjmp	.+34     	; 0x524 <__stack+0x25>
 502:	ea e0       	ldi	r30, 0x0A	; 10
 504:	2e 9e       	mul	r2, r30
 506:	20 0d       	add	r18, r0
 508:	11 24       	eor	r1, r1
 50a:	22 2e       	mov	r2, r18
 50c:	f3 2d       	mov	r31, r3
 50e:	f0 62       	ori	r31, 0x20	; 32
 510:	3f 2e       	mov	r3, r31
 512:	08 c0       	rjmp	.+16     	; 0x524 <__stack+0x25>
 514:	8c 36       	cpi	r24, 0x6C	; 108
 516:	21 f4       	brne	.+8      	; 0x520 <__stack+0x21>
 518:	83 2d       	mov	r24, r3
 51a:	80 68       	ori	r24, 0x80	; 128
 51c:	38 2e       	mov	r3, r24
 51e:	02 c0       	rjmp	.+4      	; 0x524 <__stack+0x25>
 520:	88 36       	cpi	r24, 0x68	; 104
 522:	41 f4       	brne	.+16     	; 0x534 <__stack+0x35>
 524:	f7 01       	movw	r30, r14
 526:	93 fd       	sbrc	r25, 3
 528:	85 91       	lpm	r24, Z+
 52a:	93 ff       	sbrs	r25, 3
 52c:	81 91       	ld	r24, Z+
 52e:	7f 01       	movw	r14, r30
 530:	81 11       	cpse	r24, r1
 532:	b3 cf       	rjmp	.-154    	; 0x49a <vfprintf+0x5c>
 534:	98 2f       	mov	r25, r24
 536:	9f 7d       	andi	r25, 0xDF	; 223
 538:	95 54       	subi	r25, 0x45	; 69
 53a:	93 30       	cpi	r25, 0x03	; 3
 53c:	28 f4       	brcc	.+10     	; 0x548 <__stack+0x49>
 53e:	0c 5f       	subi	r16, 0xFC	; 252
 540:	1f 4f       	sbci	r17, 0xFF	; 255
 542:	9f e3       	ldi	r25, 0x3F	; 63
 544:	99 83       	std	Y+1, r25	; 0x01
 546:	0d c0       	rjmp	.+26     	; 0x562 <__stack+0x63>
 548:	83 36       	cpi	r24, 0x63	; 99
 54a:	31 f0       	breq	.+12     	; 0x558 <__stack+0x59>
 54c:	83 37       	cpi	r24, 0x73	; 115
 54e:	71 f0       	breq	.+28     	; 0x56c <__stack+0x6d>
 550:	83 35       	cpi	r24, 0x53	; 83
 552:	09 f0       	breq	.+2      	; 0x556 <__stack+0x57>
 554:	59 c0       	rjmp	.+178    	; 0x608 <__stack+0x109>
 556:	21 c0       	rjmp	.+66     	; 0x59a <__stack+0x9b>
 558:	f8 01       	movw	r30, r16
 55a:	80 81       	ld	r24, Z
 55c:	89 83       	std	Y+1, r24	; 0x01
 55e:	0e 5f       	subi	r16, 0xFE	; 254
 560:	1f 4f       	sbci	r17, 0xFF	; 255
 562:	88 24       	eor	r8, r8
 564:	83 94       	inc	r8
 566:	91 2c       	mov	r9, r1
 568:	53 01       	movw	r10, r6
 56a:	13 c0       	rjmp	.+38     	; 0x592 <__stack+0x93>
 56c:	28 01       	movw	r4, r16
 56e:	f2 e0       	ldi	r31, 0x02	; 2
 570:	4f 0e       	add	r4, r31
 572:	51 1c       	adc	r5, r1
 574:	f8 01       	movw	r30, r16
 576:	a0 80       	ld	r10, Z
 578:	b1 80       	ldd	r11, Z+1	; 0x01
 57a:	36 fe       	sbrs	r3, 6
 57c:	03 c0       	rjmp	.+6      	; 0x584 <__stack+0x85>
 57e:	69 2d       	mov	r22, r9
 580:	70 e0       	ldi	r23, 0x00	; 0
 582:	02 c0       	rjmp	.+4      	; 0x588 <__stack+0x89>
 584:	6f ef       	ldi	r22, 0xFF	; 255
 586:	7f ef       	ldi	r23, 0xFF	; 255
 588:	c5 01       	movw	r24, r10
 58a:	0e 94 4f 05 	call	0xa9e	; 0xa9e <strnlen>
 58e:	4c 01       	movw	r8, r24
 590:	82 01       	movw	r16, r4
 592:	f3 2d       	mov	r31, r3
 594:	ff 77       	andi	r31, 0x7F	; 127
 596:	3f 2e       	mov	r3, r31
 598:	16 c0       	rjmp	.+44     	; 0x5c6 <__stack+0xc7>
 59a:	28 01       	movw	r4, r16
 59c:	22 e0       	ldi	r18, 0x02	; 2
 59e:	42 0e       	add	r4, r18
 5a0:	51 1c       	adc	r5, r1
 5a2:	f8 01       	movw	r30, r16
 5a4:	a0 80       	ld	r10, Z
 5a6:	b1 80       	ldd	r11, Z+1	; 0x01
 5a8:	36 fe       	sbrs	r3, 6
 5aa:	03 c0       	rjmp	.+6      	; 0x5b2 <__stack+0xb3>
 5ac:	69 2d       	mov	r22, r9
 5ae:	70 e0       	ldi	r23, 0x00	; 0
 5b0:	02 c0       	rjmp	.+4      	; 0x5b6 <__stack+0xb7>
 5b2:	6f ef       	ldi	r22, 0xFF	; 255
 5b4:	7f ef       	ldi	r23, 0xFF	; 255
 5b6:	c5 01       	movw	r24, r10
 5b8:	0e 94 3d 05 	call	0xa7a	; 0xa7a <strnlen_P>
 5bc:	4c 01       	movw	r8, r24
 5be:	f3 2d       	mov	r31, r3
 5c0:	f0 68       	ori	r31, 0x80	; 128
 5c2:	3f 2e       	mov	r3, r31
 5c4:	82 01       	movw	r16, r4
 5c6:	33 fc       	sbrc	r3, 3
 5c8:	1b c0       	rjmp	.+54     	; 0x600 <__stack+0x101>
 5ca:	82 2d       	mov	r24, r2
 5cc:	90 e0       	ldi	r25, 0x00	; 0
 5ce:	88 16       	cp	r8, r24
 5d0:	99 06       	cpc	r9, r25
 5d2:	b0 f4       	brcc	.+44     	; 0x600 <__stack+0x101>
 5d4:	b6 01       	movw	r22, r12
 5d6:	80 e2       	ldi	r24, 0x20	; 32
 5d8:	90 e0       	ldi	r25, 0x00	; 0
 5da:	0e 94 5a 05 	call	0xab4	; 0xab4 <fputc>
 5de:	2a 94       	dec	r2
 5e0:	f4 cf       	rjmp	.-24     	; 0x5ca <__stack+0xcb>
 5e2:	f5 01       	movw	r30, r10
 5e4:	37 fc       	sbrc	r3, 7
 5e6:	85 91       	lpm	r24, Z+
 5e8:	37 fe       	sbrs	r3, 7
 5ea:	81 91       	ld	r24, Z+
 5ec:	5f 01       	movw	r10, r30
 5ee:	b6 01       	movw	r22, r12
 5f0:	90 e0       	ldi	r25, 0x00	; 0
 5f2:	0e 94 5a 05 	call	0xab4	; 0xab4 <fputc>
 5f6:	21 10       	cpse	r2, r1
 5f8:	2a 94       	dec	r2
 5fa:	21 e0       	ldi	r18, 0x01	; 1
 5fc:	82 1a       	sub	r8, r18
 5fe:	91 08       	sbc	r9, r1
 600:	81 14       	cp	r8, r1
 602:	91 04       	cpc	r9, r1
 604:	71 f7       	brne	.-36     	; 0x5e2 <__stack+0xe3>
 606:	e8 c0       	rjmp	.+464    	; 0x7d8 <__stack+0x2d9>
 608:	84 36       	cpi	r24, 0x64	; 100
 60a:	11 f0       	breq	.+4      	; 0x610 <__stack+0x111>
 60c:	89 36       	cpi	r24, 0x69	; 105
 60e:	41 f5       	brne	.+80     	; 0x660 <__stack+0x161>
 610:	f8 01       	movw	r30, r16
 612:	37 fe       	sbrs	r3, 7
 614:	07 c0       	rjmp	.+14     	; 0x624 <__stack+0x125>
 616:	60 81       	ld	r22, Z
 618:	71 81       	ldd	r23, Z+1	; 0x01
 61a:	82 81       	ldd	r24, Z+2	; 0x02
 61c:	93 81       	ldd	r25, Z+3	; 0x03
 61e:	0c 5f       	subi	r16, 0xFC	; 252
 620:	1f 4f       	sbci	r17, 0xFF	; 255
 622:	08 c0       	rjmp	.+16     	; 0x634 <__stack+0x135>
 624:	60 81       	ld	r22, Z
 626:	71 81       	ldd	r23, Z+1	; 0x01
 628:	07 2e       	mov	r0, r23
 62a:	00 0c       	add	r0, r0
 62c:	88 0b       	sbc	r24, r24
 62e:	99 0b       	sbc	r25, r25
 630:	0e 5f       	subi	r16, 0xFE	; 254
 632:	1f 4f       	sbci	r17, 0xFF	; 255
 634:	f3 2d       	mov	r31, r3
 636:	ff 76       	andi	r31, 0x6F	; 111
 638:	3f 2e       	mov	r3, r31
 63a:	97 ff       	sbrs	r25, 7
 63c:	09 c0       	rjmp	.+18     	; 0x650 <__stack+0x151>
 63e:	90 95       	com	r25
 640:	80 95       	com	r24
 642:	70 95       	com	r23
 644:	61 95       	neg	r22
 646:	7f 4f       	sbci	r23, 0xFF	; 255
 648:	8f 4f       	sbci	r24, 0xFF	; 255
 64a:	9f 4f       	sbci	r25, 0xFF	; 255
 64c:	f0 68       	ori	r31, 0x80	; 128
 64e:	3f 2e       	mov	r3, r31
 650:	2a e0       	ldi	r18, 0x0A	; 10
 652:	30 e0       	ldi	r19, 0x00	; 0
 654:	a3 01       	movw	r20, r6
 656:	0e 94 96 05 	call	0xb2c	; 0xb2c <__ultoa_invert>
 65a:	88 2e       	mov	r8, r24
 65c:	86 18       	sub	r8, r6
 65e:	45 c0       	rjmp	.+138    	; 0x6ea <__stack+0x1eb>
 660:	85 37       	cpi	r24, 0x75	; 117
 662:	31 f4       	brne	.+12     	; 0x670 <__stack+0x171>
 664:	23 2d       	mov	r18, r3
 666:	2f 7e       	andi	r18, 0xEF	; 239
 668:	b2 2e       	mov	r11, r18
 66a:	2a e0       	ldi	r18, 0x0A	; 10
 66c:	30 e0       	ldi	r19, 0x00	; 0
 66e:	25 c0       	rjmp	.+74     	; 0x6ba <__stack+0x1bb>
 670:	93 2d       	mov	r25, r3
 672:	99 7f       	andi	r25, 0xF9	; 249
 674:	b9 2e       	mov	r11, r25
 676:	8f 36       	cpi	r24, 0x6F	; 111
 678:	c1 f0       	breq	.+48     	; 0x6aa <__stack+0x1ab>
 67a:	18 f4       	brcc	.+6      	; 0x682 <__stack+0x183>
 67c:	88 35       	cpi	r24, 0x58	; 88
 67e:	79 f0       	breq	.+30     	; 0x69e <__stack+0x19f>
 680:	b5 c0       	rjmp	.+362    	; 0x7ec <__stack+0x2ed>
 682:	80 37       	cpi	r24, 0x70	; 112
 684:	19 f0       	breq	.+6      	; 0x68c <__stack+0x18d>
 686:	88 37       	cpi	r24, 0x78	; 120
 688:	21 f0       	breq	.+8      	; 0x692 <__stack+0x193>
 68a:	b0 c0       	rjmp	.+352    	; 0x7ec <__stack+0x2ed>
 68c:	e9 2f       	mov	r30, r25
 68e:	e0 61       	ori	r30, 0x10	; 16
 690:	be 2e       	mov	r11, r30
 692:	b4 fe       	sbrs	r11, 4
 694:	0d c0       	rjmp	.+26     	; 0x6b0 <__stack+0x1b1>
 696:	fb 2d       	mov	r31, r11
 698:	f4 60       	ori	r31, 0x04	; 4
 69a:	bf 2e       	mov	r11, r31
 69c:	09 c0       	rjmp	.+18     	; 0x6b0 <__stack+0x1b1>
 69e:	34 fe       	sbrs	r3, 4
 6a0:	0a c0       	rjmp	.+20     	; 0x6b6 <__stack+0x1b7>
 6a2:	29 2f       	mov	r18, r25
 6a4:	26 60       	ori	r18, 0x06	; 6
 6a6:	b2 2e       	mov	r11, r18
 6a8:	06 c0       	rjmp	.+12     	; 0x6b6 <__stack+0x1b7>
 6aa:	28 e0       	ldi	r18, 0x08	; 8
 6ac:	30 e0       	ldi	r19, 0x00	; 0
 6ae:	05 c0       	rjmp	.+10     	; 0x6ba <__stack+0x1bb>
 6b0:	20 e1       	ldi	r18, 0x10	; 16
 6b2:	30 e0       	ldi	r19, 0x00	; 0
 6b4:	02 c0       	rjmp	.+4      	; 0x6ba <__stack+0x1bb>
 6b6:	20 e1       	ldi	r18, 0x10	; 16
 6b8:	32 e0       	ldi	r19, 0x02	; 2
 6ba:	f8 01       	movw	r30, r16
 6bc:	b7 fe       	sbrs	r11, 7
 6be:	07 c0       	rjmp	.+14     	; 0x6ce <__stack+0x1cf>
 6c0:	60 81       	ld	r22, Z
 6c2:	71 81       	ldd	r23, Z+1	; 0x01
 6c4:	82 81       	ldd	r24, Z+2	; 0x02
 6c6:	93 81       	ldd	r25, Z+3	; 0x03
 6c8:	0c 5f       	subi	r16, 0xFC	; 252
 6ca:	1f 4f       	sbci	r17, 0xFF	; 255
 6cc:	06 c0       	rjmp	.+12     	; 0x6da <__stack+0x1db>
 6ce:	60 81       	ld	r22, Z
 6d0:	71 81       	ldd	r23, Z+1	; 0x01
 6d2:	80 e0       	ldi	r24, 0x00	; 0
 6d4:	90 e0       	ldi	r25, 0x00	; 0
 6d6:	0e 5f       	subi	r16, 0xFE	; 254
 6d8:	1f 4f       	sbci	r17, 0xFF	; 255
 6da:	a3 01       	movw	r20, r6
 6dc:	0e 94 96 05 	call	0xb2c	; 0xb2c <__ultoa_invert>
 6e0:	88 2e       	mov	r8, r24
 6e2:	86 18       	sub	r8, r6
 6e4:	fb 2d       	mov	r31, r11
 6e6:	ff 77       	andi	r31, 0x7F	; 127
 6e8:	3f 2e       	mov	r3, r31
 6ea:	36 fe       	sbrs	r3, 6
 6ec:	0d c0       	rjmp	.+26     	; 0x708 <__stack+0x209>
 6ee:	23 2d       	mov	r18, r3
 6f0:	2e 7f       	andi	r18, 0xFE	; 254
 6f2:	a2 2e       	mov	r10, r18
 6f4:	89 14       	cp	r8, r9
 6f6:	58 f4       	brcc	.+22     	; 0x70e <__stack+0x20f>
 6f8:	34 fe       	sbrs	r3, 4
 6fa:	0b c0       	rjmp	.+22     	; 0x712 <__stack+0x213>
 6fc:	32 fc       	sbrc	r3, 2
 6fe:	09 c0       	rjmp	.+18     	; 0x712 <__stack+0x213>
 700:	83 2d       	mov	r24, r3
 702:	8e 7e       	andi	r24, 0xEE	; 238
 704:	a8 2e       	mov	r10, r24
 706:	05 c0       	rjmp	.+10     	; 0x712 <__stack+0x213>
 708:	b8 2c       	mov	r11, r8
 70a:	a3 2c       	mov	r10, r3
 70c:	03 c0       	rjmp	.+6      	; 0x714 <__stack+0x215>
 70e:	b8 2c       	mov	r11, r8
 710:	01 c0       	rjmp	.+2      	; 0x714 <__stack+0x215>
 712:	b9 2c       	mov	r11, r9
 714:	a4 fe       	sbrs	r10, 4
 716:	0f c0       	rjmp	.+30     	; 0x736 <__stack+0x237>
 718:	fe 01       	movw	r30, r28
 71a:	e8 0d       	add	r30, r8
 71c:	f1 1d       	adc	r31, r1
 71e:	80 81       	ld	r24, Z
 720:	80 33       	cpi	r24, 0x30	; 48
 722:	21 f4       	brne	.+8      	; 0x72c <__stack+0x22d>
 724:	9a 2d       	mov	r25, r10
 726:	99 7e       	andi	r25, 0xE9	; 233
 728:	a9 2e       	mov	r10, r25
 72a:	09 c0       	rjmp	.+18     	; 0x73e <__stack+0x23f>
 72c:	a2 fe       	sbrs	r10, 2
 72e:	06 c0       	rjmp	.+12     	; 0x73c <__stack+0x23d>
 730:	b3 94       	inc	r11
 732:	b3 94       	inc	r11
 734:	04 c0       	rjmp	.+8      	; 0x73e <__stack+0x23f>
 736:	8a 2d       	mov	r24, r10
 738:	86 78       	andi	r24, 0x86	; 134
 73a:	09 f0       	breq	.+2      	; 0x73e <__stack+0x23f>
 73c:	b3 94       	inc	r11
 73e:	a3 fc       	sbrc	r10, 3
 740:	11 c0       	rjmp	.+34     	; 0x764 <__stack+0x265>
 742:	a0 fe       	sbrs	r10, 0
 744:	06 c0       	rjmp	.+12     	; 0x752 <__stack+0x253>
 746:	b2 14       	cp	r11, r2
 748:	88 f4       	brcc	.+34     	; 0x76c <__stack+0x26d>
 74a:	28 0c       	add	r2, r8
 74c:	92 2c       	mov	r9, r2
 74e:	9b 18       	sub	r9, r11
 750:	0e c0       	rjmp	.+28     	; 0x76e <__stack+0x26f>
 752:	b2 14       	cp	r11, r2
 754:	60 f4       	brcc	.+24     	; 0x76e <__stack+0x26f>
 756:	b6 01       	movw	r22, r12
 758:	80 e2       	ldi	r24, 0x20	; 32
 75a:	90 e0       	ldi	r25, 0x00	; 0
 75c:	0e 94 5a 05 	call	0xab4	; 0xab4 <fputc>
 760:	b3 94       	inc	r11
 762:	f7 cf       	rjmp	.-18     	; 0x752 <__stack+0x253>
 764:	b2 14       	cp	r11, r2
 766:	18 f4       	brcc	.+6      	; 0x76e <__stack+0x26f>
 768:	2b 18       	sub	r2, r11
 76a:	02 c0       	rjmp	.+4      	; 0x770 <__stack+0x271>
 76c:	98 2c       	mov	r9, r8
 76e:	21 2c       	mov	r2, r1
 770:	a4 fe       	sbrs	r10, 4
 772:	10 c0       	rjmp	.+32     	; 0x794 <__stack+0x295>
 774:	b6 01       	movw	r22, r12
 776:	80 e3       	ldi	r24, 0x30	; 48
 778:	90 e0       	ldi	r25, 0x00	; 0
 77a:	0e 94 5a 05 	call	0xab4	; 0xab4 <fputc>
 77e:	a2 fe       	sbrs	r10, 2
 780:	17 c0       	rjmp	.+46     	; 0x7b0 <__stack+0x2b1>
 782:	a1 fc       	sbrc	r10, 1
 784:	03 c0       	rjmp	.+6      	; 0x78c <__stack+0x28d>
 786:	88 e7       	ldi	r24, 0x78	; 120
 788:	90 e0       	ldi	r25, 0x00	; 0
 78a:	02 c0       	rjmp	.+4      	; 0x790 <__stack+0x291>
 78c:	88 e5       	ldi	r24, 0x58	; 88
 78e:	90 e0       	ldi	r25, 0x00	; 0
 790:	b6 01       	movw	r22, r12
 792:	0c c0       	rjmp	.+24     	; 0x7ac <__stack+0x2ad>
 794:	8a 2d       	mov	r24, r10
 796:	86 78       	andi	r24, 0x86	; 134
 798:	59 f0       	breq	.+22     	; 0x7b0 <__stack+0x2b1>
 79a:	a1 fe       	sbrs	r10, 1
 79c:	02 c0       	rjmp	.+4      	; 0x7a2 <__stack+0x2a3>
 79e:	8b e2       	ldi	r24, 0x2B	; 43
 7a0:	01 c0       	rjmp	.+2      	; 0x7a4 <__stack+0x2a5>
 7a2:	80 e2       	ldi	r24, 0x20	; 32
 7a4:	a7 fc       	sbrc	r10, 7
 7a6:	8d e2       	ldi	r24, 0x2D	; 45
 7a8:	b6 01       	movw	r22, r12
 7aa:	90 e0       	ldi	r25, 0x00	; 0
 7ac:	0e 94 5a 05 	call	0xab4	; 0xab4 <fputc>
 7b0:	89 14       	cp	r8, r9
 7b2:	38 f4       	brcc	.+14     	; 0x7c2 <__stack+0x2c3>
 7b4:	b6 01       	movw	r22, r12
 7b6:	80 e3       	ldi	r24, 0x30	; 48
 7b8:	90 e0       	ldi	r25, 0x00	; 0
 7ba:	0e 94 5a 05 	call	0xab4	; 0xab4 <fputc>
 7be:	9a 94       	dec	r9
 7c0:	f7 cf       	rjmp	.-18     	; 0x7b0 <__stack+0x2b1>
 7c2:	8a 94       	dec	r8
 7c4:	f3 01       	movw	r30, r6
 7c6:	e8 0d       	add	r30, r8
 7c8:	f1 1d       	adc	r31, r1
 7ca:	80 81       	ld	r24, Z
 7cc:	b6 01       	movw	r22, r12
 7ce:	90 e0       	ldi	r25, 0x00	; 0
 7d0:	0e 94 5a 05 	call	0xab4	; 0xab4 <fputc>
 7d4:	81 10       	cpse	r8, r1
 7d6:	f5 cf       	rjmp	.-22     	; 0x7c2 <__stack+0x2c3>
 7d8:	22 20       	and	r2, r2
 7da:	09 f4       	brne	.+2      	; 0x7de <__stack+0x2df>
 7dc:	42 ce       	rjmp	.-892    	; 0x462 <vfprintf+0x24>
 7de:	b6 01       	movw	r22, r12
 7e0:	80 e2       	ldi	r24, 0x20	; 32
 7e2:	90 e0       	ldi	r25, 0x00	; 0
 7e4:	0e 94 5a 05 	call	0xab4	; 0xab4 <fputc>
 7e8:	2a 94       	dec	r2
 7ea:	f6 cf       	rjmp	.-20     	; 0x7d8 <__stack+0x2d9>
 7ec:	f6 01       	movw	r30, r12
 7ee:	86 81       	ldd	r24, Z+6	; 0x06
 7f0:	97 81       	ldd	r25, Z+7	; 0x07
 7f2:	02 c0       	rjmp	.+4      	; 0x7f8 <__stack+0x2f9>
 7f4:	8f ef       	ldi	r24, 0xFF	; 255
 7f6:	9f ef       	ldi	r25, 0xFF	; 255
 7f8:	2b 96       	adiw	r28, 0x0b	; 11
 7fa:	e2 e1       	ldi	r30, 0x12	; 18
 7fc:	0c 94 42 06 	jmp	0xc84	; 0xc84 <__epilogue_restores__>

00000800 <calloc>:
 800:	0f 93       	push	r16
 802:	1f 93       	push	r17
 804:	cf 93       	push	r28
 806:	df 93       	push	r29
 808:	86 9f       	mul	r24, r22
 80a:	80 01       	movw	r16, r0
 80c:	87 9f       	mul	r24, r23
 80e:	10 0d       	add	r17, r0
 810:	96 9f       	mul	r25, r22
 812:	10 0d       	add	r17, r0
 814:	11 24       	eor	r1, r1
 816:	c8 01       	movw	r24, r16
 818:	0e 94 1c 04 	call	0x838	; 0x838 <malloc>
 81c:	ec 01       	movw	r28, r24
 81e:	00 97       	sbiw	r24, 0x00	; 0
 820:	29 f0       	breq	.+10     	; 0x82c <calloc+0x2c>
 822:	a8 01       	movw	r20, r16
 824:	60 e0       	ldi	r22, 0x00	; 0
 826:	70 e0       	ldi	r23, 0x00	; 0
 828:	0e 94 48 05 	call	0xa90	; 0xa90 <memset>
 82c:	ce 01       	movw	r24, r28
 82e:	df 91       	pop	r29
 830:	cf 91       	pop	r28
 832:	1f 91       	pop	r17
 834:	0f 91       	pop	r16
 836:	08 95       	ret

00000838 <malloc>:
 838:	0f 93       	push	r16
 83a:	1f 93       	push	r17
 83c:	cf 93       	push	r28
 83e:	df 93       	push	r29
 840:	82 30       	cpi	r24, 0x02	; 2
 842:	91 05       	cpc	r25, r1
 844:	10 f4       	brcc	.+4      	; 0x84a <malloc+0x12>
 846:	82 e0       	ldi	r24, 0x02	; 2
 848:	90 e0       	ldi	r25, 0x00	; 0
 84a:	e0 91 f8 01 	lds	r30, 0x01F8	; 0x8001f8 <__flp>
 84e:	f0 91 f9 01 	lds	r31, 0x01F9	; 0x8001f9 <__flp+0x1>
 852:	20 e0       	ldi	r18, 0x00	; 0
 854:	30 e0       	ldi	r19, 0x00	; 0
 856:	a0 e0       	ldi	r26, 0x00	; 0
 858:	b0 e0       	ldi	r27, 0x00	; 0
 85a:	30 97       	sbiw	r30, 0x00	; 0
 85c:	19 f1       	breq	.+70     	; 0x8a4 <malloc+0x6c>
 85e:	40 81       	ld	r20, Z
 860:	51 81       	ldd	r21, Z+1	; 0x01
 862:	02 81       	ldd	r16, Z+2	; 0x02
 864:	13 81       	ldd	r17, Z+3	; 0x03
 866:	48 17       	cp	r20, r24
 868:	59 07       	cpc	r21, r25
 86a:	c8 f0       	brcs	.+50     	; 0x89e <malloc+0x66>
 86c:	84 17       	cp	r24, r20
 86e:	95 07       	cpc	r25, r21
 870:	69 f4       	brne	.+26     	; 0x88c <malloc+0x54>
 872:	10 97       	sbiw	r26, 0x00	; 0
 874:	31 f0       	breq	.+12     	; 0x882 <malloc+0x4a>
 876:	12 96       	adiw	r26, 0x02	; 2
 878:	0c 93       	st	X, r16
 87a:	12 97       	sbiw	r26, 0x02	; 2
 87c:	13 96       	adiw	r26, 0x03	; 3
 87e:	1c 93       	st	X, r17
 880:	27 c0       	rjmp	.+78     	; 0x8d0 <malloc+0x98>
 882:	00 93 f8 01 	sts	0x01F8, r16	; 0x8001f8 <__flp>
 886:	10 93 f9 01 	sts	0x01F9, r17	; 0x8001f9 <__flp+0x1>
 88a:	22 c0       	rjmp	.+68     	; 0x8d0 <malloc+0x98>
 88c:	21 15       	cp	r18, r1
 88e:	31 05       	cpc	r19, r1
 890:	19 f0       	breq	.+6      	; 0x898 <malloc+0x60>
 892:	42 17       	cp	r20, r18
 894:	53 07       	cpc	r21, r19
 896:	18 f4       	brcc	.+6      	; 0x89e <malloc+0x66>
 898:	9a 01       	movw	r18, r20
 89a:	bd 01       	movw	r22, r26
 89c:	ef 01       	movw	r28, r30
 89e:	df 01       	movw	r26, r30
 8a0:	f8 01       	movw	r30, r16
 8a2:	db cf       	rjmp	.-74     	; 0x85a <malloc+0x22>
 8a4:	21 15       	cp	r18, r1
 8a6:	31 05       	cpc	r19, r1
 8a8:	f9 f0       	breq	.+62     	; 0x8e8 <malloc+0xb0>
 8aa:	28 1b       	sub	r18, r24
 8ac:	39 0b       	sbc	r19, r25
 8ae:	24 30       	cpi	r18, 0x04	; 4
 8b0:	31 05       	cpc	r19, r1
 8b2:	80 f4       	brcc	.+32     	; 0x8d4 <malloc+0x9c>
 8b4:	8a 81       	ldd	r24, Y+2	; 0x02
 8b6:	9b 81       	ldd	r25, Y+3	; 0x03
 8b8:	61 15       	cp	r22, r1
 8ba:	71 05       	cpc	r23, r1
 8bc:	21 f0       	breq	.+8      	; 0x8c6 <malloc+0x8e>
 8be:	fb 01       	movw	r30, r22
 8c0:	93 83       	std	Z+3, r25	; 0x03
 8c2:	82 83       	std	Z+2, r24	; 0x02
 8c4:	04 c0       	rjmp	.+8      	; 0x8ce <malloc+0x96>
 8c6:	90 93 f9 01 	sts	0x01F9, r25	; 0x8001f9 <__flp+0x1>
 8ca:	80 93 f8 01 	sts	0x01F8, r24	; 0x8001f8 <__flp>
 8ce:	fe 01       	movw	r30, r28
 8d0:	32 96       	adiw	r30, 0x02	; 2
 8d2:	44 c0       	rjmp	.+136    	; 0x95c <malloc+0x124>
 8d4:	fe 01       	movw	r30, r28
 8d6:	e2 0f       	add	r30, r18
 8d8:	f3 1f       	adc	r31, r19
 8da:	81 93       	st	Z+, r24
 8dc:	91 93       	st	Z+, r25
 8de:	22 50       	subi	r18, 0x02	; 2
 8e0:	31 09       	sbc	r19, r1
 8e2:	39 83       	std	Y+1, r19	; 0x01
 8e4:	28 83       	st	Y, r18
 8e6:	3a c0       	rjmp	.+116    	; 0x95c <malloc+0x124>
 8e8:	20 91 f6 01 	lds	r18, 0x01F6	; 0x8001f6 <__brkval>
 8ec:	30 91 f7 01 	lds	r19, 0x01F7	; 0x8001f7 <__brkval+0x1>
 8f0:	23 2b       	or	r18, r19
 8f2:	41 f4       	brne	.+16     	; 0x904 <malloc+0xcc>
 8f4:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__malloc_heap_start>
 8f8:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__malloc_heap_start+0x1>
 8fc:	30 93 f7 01 	sts	0x01F7, r19	; 0x8001f7 <__brkval+0x1>
 900:	20 93 f6 01 	sts	0x01F6, r18	; 0x8001f6 <__brkval>
 904:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__malloc_heap_end>
 908:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__malloc_heap_end+0x1>
 90c:	21 15       	cp	r18, r1
 90e:	31 05       	cpc	r19, r1
 910:	41 f4       	brne	.+16     	; 0x922 <malloc+0xea>
 912:	2d b7       	in	r18, 0x3d	; 61
 914:	3e b7       	in	r19, 0x3e	; 62
 916:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <__malloc_margin>
 91a:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <__malloc_margin+0x1>
 91e:	24 1b       	sub	r18, r20
 920:	35 0b       	sbc	r19, r21
 922:	e0 91 f6 01 	lds	r30, 0x01F6	; 0x8001f6 <__brkval>
 926:	f0 91 f7 01 	lds	r31, 0x01F7	; 0x8001f7 <__brkval+0x1>
 92a:	e2 17       	cp	r30, r18
 92c:	f3 07       	cpc	r31, r19
 92e:	a0 f4       	brcc	.+40     	; 0x958 <malloc+0x120>
 930:	2e 1b       	sub	r18, r30
 932:	3f 0b       	sbc	r19, r31
 934:	28 17       	cp	r18, r24
 936:	39 07       	cpc	r19, r25
 938:	78 f0       	brcs	.+30     	; 0x958 <malloc+0x120>
 93a:	ac 01       	movw	r20, r24
 93c:	4e 5f       	subi	r20, 0xFE	; 254
 93e:	5f 4f       	sbci	r21, 0xFF	; 255
 940:	24 17       	cp	r18, r20
 942:	35 07       	cpc	r19, r21
 944:	48 f0       	brcs	.+18     	; 0x958 <malloc+0x120>
 946:	4e 0f       	add	r20, r30
 948:	5f 1f       	adc	r21, r31
 94a:	50 93 f7 01 	sts	0x01F7, r21	; 0x8001f7 <__brkval+0x1>
 94e:	40 93 f6 01 	sts	0x01F6, r20	; 0x8001f6 <__brkval>
 952:	81 93       	st	Z+, r24
 954:	91 93       	st	Z+, r25
 956:	02 c0       	rjmp	.+4      	; 0x95c <malloc+0x124>
 958:	e0 e0       	ldi	r30, 0x00	; 0
 95a:	f0 e0       	ldi	r31, 0x00	; 0
 95c:	cf 01       	movw	r24, r30
 95e:	df 91       	pop	r29
 960:	cf 91       	pop	r28
 962:	1f 91       	pop	r17
 964:	0f 91       	pop	r16
 966:	08 95       	ret

00000968 <free>:
 968:	cf 93       	push	r28
 96a:	df 93       	push	r29
 96c:	00 97       	sbiw	r24, 0x00	; 0
 96e:	09 f4       	brne	.+2      	; 0x972 <free+0xa>
 970:	81 c0       	rjmp	.+258    	; 0xa74 <free+0x10c>
 972:	fc 01       	movw	r30, r24
 974:	32 97       	sbiw	r30, 0x02	; 2
 976:	13 82       	std	Z+3, r1	; 0x03
 978:	12 82       	std	Z+2, r1	; 0x02
 97a:	a0 91 f8 01 	lds	r26, 0x01F8	; 0x8001f8 <__flp>
 97e:	b0 91 f9 01 	lds	r27, 0x01F9	; 0x8001f9 <__flp+0x1>
 982:	10 97       	sbiw	r26, 0x00	; 0
 984:	81 f4       	brne	.+32     	; 0x9a6 <free+0x3e>
 986:	20 81       	ld	r18, Z
 988:	31 81       	ldd	r19, Z+1	; 0x01
 98a:	82 0f       	add	r24, r18
 98c:	93 1f       	adc	r25, r19
 98e:	20 91 f6 01 	lds	r18, 0x01F6	; 0x8001f6 <__brkval>
 992:	30 91 f7 01 	lds	r19, 0x01F7	; 0x8001f7 <__brkval+0x1>
 996:	28 17       	cp	r18, r24
 998:	39 07       	cpc	r19, r25
 99a:	51 f5       	brne	.+84     	; 0x9f0 <free+0x88>
 99c:	f0 93 f7 01 	sts	0x01F7, r31	; 0x8001f7 <__brkval+0x1>
 9a0:	e0 93 f6 01 	sts	0x01F6, r30	; 0x8001f6 <__brkval>
 9a4:	67 c0       	rjmp	.+206    	; 0xa74 <free+0x10c>
 9a6:	ed 01       	movw	r28, r26
 9a8:	20 e0       	ldi	r18, 0x00	; 0
 9aa:	30 e0       	ldi	r19, 0x00	; 0
 9ac:	ce 17       	cp	r28, r30
 9ae:	df 07       	cpc	r29, r31
 9b0:	40 f4       	brcc	.+16     	; 0x9c2 <free+0x5a>
 9b2:	4a 81       	ldd	r20, Y+2	; 0x02
 9b4:	5b 81       	ldd	r21, Y+3	; 0x03
 9b6:	9e 01       	movw	r18, r28
 9b8:	41 15       	cp	r20, r1
 9ba:	51 05       	cpc	r21, r1
 9bc:	f1 f0       	breq	.+60     	; 0x9fa <free+0x92>
 9be:	ea 01       	movw	r28, r20
 9c0:	f5 cf       	rjmp	.-22     	; 0x9ac <free+0x44>
 9c2:	d3 83       	std	Z+3, r29	; 0x03
 9c4:	c2 83       	std	Z+2, r28	; 0x02
 9c6:	40 81       	ld	r20, Z
 9c8:	51 81       	ldd	r21, Z+1	; 0x01
 9ca:	84 0f       	add	r24, r20
 9cc:	95 1f       	adc	r25, r21
 9ce:	c8 17       	cp	r28, r24
 9d0:	d9 07       	cpc	r29, r25
 9d2:	59 f4       	brne	.+22     	; 0x9ea <free+0x82>
 9d4:	88 81       	ld	r24, Y
 9d6:	99 81       	ldd	r25, Y+1	; 0x01
 9d8:	84 0f       	add	r24, r20
 9da:	95 1f       	adc	r25, r21
 9dc:	02 96       	adiw	r24, 0x02	; 2
 9de:	91 83       	std	Z+1, r25	; 0x01
 9e0:	80 83       	st	Z, r24
 9e2:	8a 81       	ldd	r24, Y+2	; 0x02
 9e4:	9b 81       	ldd	r25, Y+3	; 0x03
 9e6:	93 83       	std	Z+3, r25	; 0x03
 9e8:	82 83       	std	Z+2, r24	; 0x02
 9ea:	21 15       	cp	r18, r1
 9ec:	31 05       	cpc	r19, r1
 9ee:	29 f4       	brne	.+10     	; 0x9fa <free+0x92>
 9f0:	f0 93 f9 01 	sts	0x01F9, r31	; 0x8001f9 <__flp+0x1>
 9f4:	e0 93 f8 01 	sts	0x01F8, r30	; 0x8001f8 <__flp>
 9f8:	3d c0       	rjmp	.+122    	; 0xa74 <free+0x10c>
 9fa:	e9 01       	movw	r28, r18
 9fc:	fb 83       	std	Y+3, r31	; 0x03
 9fe:	ea 83       	std	Y+2, r30	; 0x02
 a00:	49 91       	ld	r20, Y+
 a02:	59 91       	ld	r21, Y+
 a04:	c4 0f       	add	r28, r20
 a06:	d5 1f       	adc	r29, r21
 a08:	ec 17       	cp	r30, r28
 a0a:	fd 07       	cpc	r31, r29
 a0c:	61 f4       	brne	.+24     	; 0xa26 <free+0xbe>
 a0e:	80 81       	ld	r24, Z
 a10:	91 81       	ldd	r25, Z+1	; 0x01
 a12:	84 0f       	add	r24, r20
 a14:	95 1f       	adc	r25, r21
 a16:	02 96       	adiw	r24, 0x02	; 2
 a18:	e9 01       	movw	r28, r18
 a1a:	99 83       	std	Y+1, r25	; 0x01
 a1c:	88 83       	st	Y, r24
 a1e:	82 81       	ldd	r24, Z+2	; 0x02
 a20:	93 81       	ldd	r25, Z+3	; 0x03
 a22:	9b 83       	std	Y+3, r25	; 0x03
 a24:	8a 83       	std	Y+2, r24	; 0x02
 a26:	e0 e0       	ldi	r30, 0x00	; 0
 a28:	f0 e0       	ldi	r31, 0x00	; 0
 a2a:	12 96       	adiw	r26, 0x02	; 2
 a2c:	8d 91       	ld	r24, X+
 a2e:	9c 91       	ld	r25, X
 a30:	13 97       	sbiw	r26, 0x03	; 3
 a32:	00 97       	sbiw	r24, 0x00	; 0
 a34:	19 f0       	breq	.+6      	; 0xa3c <free+0xd4>
 a36:	fd 01       	movw	r30, r26
 a38:	dc 01       	movw	r26, r24
 a3a:	f7 cf       	rjmp	.-18     	; 0xa2a <free+0xc2>
 a3c:	8d 91       	ld	r24, X+
 a3e:	9c 91       	ld	r25, X
 a40:	11 97       	sbiw	r26, 0x01	; 1
 a42:	9d 01       	movw	r18, r26
 a44:	2e 5f       	subi	r18, 0xFE	; 254
 a46:	3f 4f       	sbci	r19, 0xFF	; 255
 a48:	82 0f       	add	r24, r18
 a4a:	93 1f       	adc	r25, r19
 a4c:	20 91 f6 01 	lds	r18, 0x01F6	; 0x8001f6 <__brkval>
 a50:	30 91 f7 01 	lds	r19, 0x01F7	; 0x8001f7 <__brkval+0x1>
 a54:	28 17       	cp	r18, r24
 a56:	39 07       	cpc	r19, r25
 a58:	69 f4       	brne	.+26     	; 0xa74 <free+0x10c>
 a5a:	30 97       	sbiw	r30, 0x00	; 0
 a5c:	29 f4       	brne	.+10     	; 0xa68 <free+0x100>
 a5e:	10 92 f9 01 	sts	0x01F9, r1	; 0x8001f9 <__flp+0x1>
 a62:	10 92 f8 01 	sts	0x01F8, r1	; 0x8001f8 <__flp>
 a66:	02 c0       	rjmp	.+4      	; 0xa6c <free+0x104>
 a68:	13 82       	std	Z+3, r1	; 0x03
 a6a:	12 82       	std	Z+2, r1	; 0x02
 a6c:	b0 93 f7 01 	sts	0x01F7, r27	; 0x8001f7 <__brkval+0x1>
 a70:	a0 93 f6 01 	sts	0x01F6, r26	; 0x8001f6 <__brkval>
 a74:	df 91       	pop	r29
 a76:	cf 91       	pop	r28
 a78:	08 95       	ret

00000a7a <strnlen_P>:
 a7a:	fc 01       	movw	r30, r24
 a7c:	05 90       	lpm	r0, Z+
 a7e:	61 50       	subi	r22, 0x01	; 1
 a80:	70 40       	sbci	r23, 0x00	; 0
 a82:	01 10       	cpse	r0, r1
 a84:	d8 f7       	brcc	.-10     	; 0xa7c <strnlen_P+0x2>
 a86:	80 95       	com	r24
 a88:	90 95       	com	r25
 a8a:	8e 0f       	add	r24, r30
 a8c:	9f 1f       	adc	r25, r31
 a8e:	08 95       	ret

00000a90 <memset>:
 a90:	dc 01       	movw	r26, r24
 a92:	01 c0       	rjmp	.+2      	; 0xa96 <memset+0x6>
 a94:	6d 93       	st	X+, r22
 a96:	41 50       	subi	r20, 0x01	; 1
 a98:	50 40       	sbci	r21, 0x00	; 0
 a9a:	e0 f7       	brcc	.-8      	; 0xa94 <memset+0x4>
 a9c:	08 95       	ret

00000a9e <strnlen>:
 a9e:	fc 01       	movw	r30, r24
 aa0:	61 50       	subi	r22, 0x01	; 1
 aa2:	70 40       	sbci	r23, 0x00	; 0
 aa4:	01 90       	ld	r0, Z+
 aa6:	01 10       	cpse	r0, r1
 aa8:	d8 f7       	brcc	.-10     	; 0xaa0 <strnlen+0x2>
 aaa:	80 95       	com	r24
 aac:	90 95       	com	r25
 aae:	8e 0f       	add	r24, r30
 ab0:	9f 1f       	adc	r25, r31
 ab2:	08 95       	ret

00000ab4 <fputc>:
 ab4:	0f 93       	push	r16
 ab6:	1f 93       	push	r17
 ab8:	cf 93       	push	r28
 aba:	df 93       	push	r29
 abc:	fb 01       	movw	r30, r22
 abe:	23 81       	ldd	r18, Z+3	; 0x03
 ac0:	21 fd       	sbrc	r18, 1
 ac2:	03 c0       	rjmp	.+6      	; 0xaca <fputc+0x16>
 ac4:	8f ef       	ldi	r24, 0xFF	; 255
 ac6:	9f ef       	ldi	r25, 0xFF	; 255
 ac8:	2c c0       	rjmp	.+88     	; 0xb22 <fputc+0x6e>
 aca:	22 ff       	sbrs	r18, 2
 acc:	16 c0       	rjmp	.+44     	; 0xafa <fputc+0x46>
 ace:	46 81       	ldd	r20, Z+6	; 0x06
 ad0:	57 81       	ldd	r21, Z+7	; 0x07
 ad2:	24 81       	ldd	r18, Z+4	; 0x04
 ad4:	35 81       	ldd	r19, Z+5	; 0x05
 ad6:	42 17       	cp	r20, r18
 ad8:	53 07       	cpc	r21, r19
 ada:	44 f4       	brge	.+16     	; 0xaec <fputc+0x38>
 adc:	a0 81       	ld	r26, Z
 ade:	b1 81       	ldd	r27, Z+1	; 0x01
 ae0:	9d 01       	movw	r18, r26
 ae2:	2f 5f       	subi	r18, 0xFF	; 255
 ae4:	3f 4f       	sbci	r19, 0xFF	; 255
 ae6:	31 83       	std	Z+1, r19	; 0x01
 ae8:	20 83       	st	Z, r18
 aea:	8c 93       	st	X, r24
 aec:	26 81       	ldd	r18, Z+6	; 0x06
 aee:	37 81       	ldd	r19, Z+7	; 0x07
 af0:	2f 5f       	subi	r18, 0xFF	; 255
 af2:	3f 4f       	sbci	r19, 0xFF	; 255
 af4:	37 83       	std	Z+7, r19	; 0x07
 af6:	26 83       	std	Z+6, r18	; 0x06
 af8:	14 c0       	rjmp	.+40     	; 0xb22 <fputc+0x6e>
 afa:	8b 01       	movw	r16, r22
 afc:	ec 01       	movw	r28, r24
 afe:	fb 01       	movw	r30, r22
 b00:	00 84       	ldd	r0, Z+8	; 0x08
 b02:	f1 85       	ldd	r31, Z+9	; 0x09
 b04:	e0 2d       	mov	r30, r0
 b06:	09 95       	icall
 b08:	89 2b       	or	r24, r25
 b0a:	e1 f6       	brne	.-72     	; 0xac4 <fputc+0x10>
 b0c:	d8 01       	movw	r26, r16
 b0e:	16 96       	adiw	r26, 0x06	; 6
 b10:	8d 91       	ld	r24, X+
 b12:	9c 91       	ld	r25, X
 b14:	17 97       	sbiw	r26, 0x07	; 7
 b16:	01 96       	adiw	r24, 0x01	; 1
 b18:	17 96       	adiw	r26, 0x07	; 7
 b1a:	9c 93       	st	X, r25
 b1c:	8e 93       	st	-X, r24
 b1e:	16 97       	sbiw	r26, 0x06	; 6
 b20:	ce 01       	movw	r24, r28
 b22:	df 91       	pop	r29
 b24:	cf 91       	pop	r28
 b26:	1f 91       	pop	r17
 b28:	0f 91       	pop	r16
 b2a:	08 95       	ret

00000b2c <__ultoa_invert>:
 b2c:	fa 01       	movw	r30, r20
 b2e:	aa 27       	eor	r26, r26
 b30:	28 30       	cpi	r18, 0x08	; 8
 b32:	51 f1       	breq	.+84     	; 0xb88 <__ultoa_invert+0x5c>
 b34:	20 31       	cpi	r18, 0x10	; 16
 b36:	81 f1       	breq	.+96     	; 0xb98 <__ultoa_invert+0x6c>
 b38:	e8 94       	clt
 b3a:	6f 93       	push	r22
 b3c:	6e 7f       	andi	r22, 0xFE	; 254
 b3e:	6e 5f       	subi	r22, 0xFE	; 254
 b40:	7f 4f       	sbci	r23, 0xFF	; 255
 b42:	8f 4f       	sbci	r24, 0xFF	; 255
 b44:	9f 4f       	sbci	r25, 0xFF	; 255
 b46:	af 4f       	sbci	r26, 0xFF	; 255
 b48:	b1 e0       	ldi	r27, 0x01	; 1
 b4a:	3e d0       	rcall	.+124    	; 0xbc8 <__ultoa_invert+0x9c>
 b4c:	b4 e0       	ldi	r27, 0x04	; 4
 b4e:	3c d0       	rcall	.+120    	; 0xbc8 <__ultoa_invert+0x9c>
 b50:	67 0f       	add	r22, r23
 b52:	78 1f       	adc	r23, r24
 b54:	89 1f       	adc	r24, r25
 b56:	9a 1f       	adc	r25, r26
 b58:	a1 1d       	adc	r26, r1
 b5a:	68 0f       	add	r22, r24
 b5c:	79 1f       	adc	r23, r25
 b5e:	8a 1f       	adc	r24, r26
 b60:	91 1d       	adc	r25, r1
 b62:	a1 1d       	adc	r26, r1
 b64:	6a 0f       	add	r22, r26
 b66:	71 1d       	adc	r23, r1
 b68:	81 1d       	adc	r24, r1
 b6a:	91 1d       	adc	r25, r1
 b6c:	a1 1d       	adc	r26, r1
 b6e:	20 d0       	rcall	.+64     	; 0xbb0 <__ultoa_invert+0x84>
 b70:	09 f4       	brne	.+2      	; 0xb74 <__ultoa_invert+0x48>
 b72:	68 94       	set
 b74:	3f 91       	pop	r19
 b76:	2a e0       	ldi	r18, 0x0A	; 10
 b78:	26 9f       	mul	r18, r22
 b7a:	11 24       	eor	r1, r1
 b7c:	30 19       	sub	r19, r0
 b7e:	30 5d       	subi	r19, 0xD0	; 208
 b80:	31 93       	st	Z+, r19
 b82:	de f6       	brtc	.-74     	; 0xb3a <__ultoa_invert+0xe>
 b84:	cf 01       	movw	r24, r30
 b86:	08 95       	ret
 b88:	46 2f       	mov	r20, r22
 b8a:	47 70       	andi	r20, 0x07	; 7
 b8c:	40 5d       	subi	r20, 0xD0	; 208
 b8e:	41 93       	st	Z+, r20
 b90:	b3 e0       	ldi	r27, 0x03	; 3
 b92:	0f d0       	rcall	.+30     	; 0xbb2 <__ultoa_invert+0x86>
 b94:	c9 f7       	brne	.-14     	; 0xb88 <__ultoa_invert+0x5c>
 b96:	f6 cf       	rjmp	.-20     	; 0xb84 <__ultoa_invert+0x58>
 b98:	46 2f       	mov	r20, r22
 b9a:	4f 70       	andi	r20, 0x0F	; 15
 b9c:	40 5d       	subi	r20, 0xD0	; 208
 b9e:	4a 33       	cpi	r20, 0x3A	; 58
 ba0:	18 f0       	brcs	.+6      	; 0xba8 <__ultoa_invert+0x7c>
 ba2:	49 5d       	subi	r20, 0xD9	; 217
 ba4:	31 fd       	sbrc	r19, 1
 ba6:	40 52       	subi	r20, 0x20	; 32
 ba8:	41 93       	st	Z+, r20
 baa:	02 d0       	rcall	.+4      	; 0xbb0 <__ultoa_invert+0x84>
 bac:	a9 f7       	brne	.-22     	; 0xb98 <__ultoa_invert+0x6c>
 bae:	ea cf       	rjmp	.-44     	; 0xb84 <__ultoa_invert+0x58>
 bb0:	b4 e0       	ldi	r27, 0x04	; 4
 bb2:	a6 95       	lsr	r26
 bb4:	97 95       	ror	r25
 bb6:	87 95       	ror	r24
 bb8:	77 95       	ror	r23
 bba:	67 95       	ror	r22
 bbc:	ba 95       	dec	r27
 bbe:	c9 f7       	brne	.-14     	; 0xbb2 <__ultoa_invert+0x86>
 bc0:	00 97       	sbiw	r24, 0x00	; 0
 bc2:	61 05       	cpc	r22, r1
 bc4:	71 05       	cpc	r23, r1
 bc6:	08 95       	ret
 bc8:	9b 01       	movw	r18, r22
 bca:	ac 01       	movw	r20, r24
 bcc:	0a 2e       	mov	r0, r26
 bce:	06 94       	lsr	r0
 bd0:	57 95       	ror	r21
 bd2:	47 95       	ror	r20
 bd4:	37 95       	ror	r19
 bd6:	27 95       	ror	r18
 bd8:	ba 95       	dec	r27
 bda:	c9 f7       	brne	.-14     	; 0xbce <__ultoa_invert+0xa2>
 bdc:	62 0f       	add	r22, r18
 bde:	73 1f       	adc	r23, r19
 be0:	84 1f       	adc	r24, r20
 be2:	95 1f       	adc	r25, r21
 be4:	a0 1d       	adc	r26, r0
 be6:	08 95       	ret

00000be8 <__divmodsi4>:
 be8:	05 2e       	mov	r0, r21
 bea:	97 fb       	bst	r25, 7
 bec:	1e f4       	brtc	.+6      	; 0xbf4 <__divmodsi4+0xc>
 bee:	00 94       	com	r0
 bf0:	0e 94 0b 06 	call	0xc16	; 0xc16 <__negsi2>
 bf4:	57 fd       	sbrc	r21, 7
 bf6:	07 d0       	rcall	.+14     	; 0xc06 <__divmodsi4_neg2>
 bf8:	0e 94 10 01 	call	0x220	; 0x220 <__udivmodsi4>
 bfc:	07 fc       	sbrc	r0, 7
 bfe:	03 d0       	rcall	.+6      	; 0xc06 <__divmodsi4_neg2>
 c00:	4e f4       	brtc	.+18     	; 0xc14 <__divmodsi4_exit>
 c02:	0c 94 0b 06 	jmp	0xc16	; 0xc16 <__negsi2>

00000c06 <__divmodsi4_neg2>:
 c06:	50 95       	com	r21
 c08:	40 95       	com	r20
 c0a:	30 95       	com	r19
 c0c:	21 95       	neg	r18
 c0e:	3f 4f       	sbci	r19, 0xFF	; 255
 c10:	4f 4f       	sbci	r20, 0xFF	; 255
 c12:	5f 4f       	sbci	r21, 0xFF	; 255

00000c14 <__divmodsi4_exit>:
 c14:	08 95       	ret

00000c16 <__negsi2>:
 c16:	90 95       	com	r25
 c18:	80 95       	com	r24
 c1a:	70 95       	com	r23
 c1c:	61 95       	neg	r22
 c1e:	7f 4f       	sbci	r23, 0xFF	; 255
 c20:	8f 4f       	sbci	r24, 0xFF	; 255
 c22:	9f 4f       	sbci	r25, 0xFF	; 255
 c24:	08 95       	ret

00000c26 <__muluhisi3>:
 c26:	0e 94 5d 06 	call	0xcba	; 0xcba <__umulhisi3>
 c2a:	a5 9f       	mul	r26, r21
 c2c:	90 0d       	add	r25, r0
 c2e:	b4 9f       	mul	r27, r20
 c30:	90 0d       	add	r25, r0
 c32:	a4 9f       	mul	r26, r20
 c34:	80 0d       	add	r24, r0
 c36:	91 1d       	adc	r25, r1
 c38:	11 24       	eor	r1, r1
 c3a:	08 95       	ret

00000c3c <__mulshisi3>:
 c3c:	b7 ff       	sbrs	r27, 7
 c3e:	0c 94 13 06 	jmp	0xc26	; 0xc26 <__muluhisi3>

00000c42 <__mulohisi3>:
 c42:	0e 94 13 06 	call	0xc26	; 0xc26 <__muluhisi3>
 c46:	82 1b       	sub	r24, r18
 c48:	93 0b       	sbc	r25, r19
 c4a:	08 95       	ret

00000c4c <__prologue_saves__>:
 c4c:	2f 92       	push	r2
 c4e:	3f 92       	push	r3
 c50:	4f 92       	push	r4
 c52:	5f 92       	push	r5
 c54:	6f 92       	push	r6
 c56:	7f 92       	push	r7
 c58:	8f 92       	push	r8
 c5a:	9f 92       	push	r9
 c5c:	af 92       	push	r10
 c5e:	bf 92       	push	r11
 c60:	cf 92       	push	r12
 c62:	df 92       	push	r13
 c64:	ef 92       	push	r14
 c66:	ff 92       	push	r15
 c68:	0f 93       	push	r16
 c6a:	1f 93       	push	r17
 c6c:	cf 93       	push	r28
 c6e:	df 93       	push	r29
 c70:	cd b7       	in	r28, 0x3d	; 61
 c72:	de b7       	in	r29, 0x3e	; 62
 c74:	ca 1b       	sub	r28, r26
 c76:	db 0b       	sbc	r29, r27
 c78:	0f b6       	in	r0, 0x3f	; 63
 c7a:	f8 94       	cli
 c7c:	de bf       	out	0x3e, r29	; 62
 c7e:	0f be       	out	0x3f, r0	; 63
 c80:	cd bf       	out	0x3d, r28	; 61
 c82:	09 94       	ijmp

00000c84 <__epilogue_restores__>:
 c84:	2a 88       	ldd	r2, Y+18	; 0x12
 c86:	39 88       	ldd	r3, Y+17	; 0x11
 c88:	48 88       	ldd	r4, Y+16	; 0x10
 c8a:	5f 84       	ldd	r5, Y+15	; 0x0f
 c8c:	6e 84       	ldd	r6, Y+14	; 0x0e
 c8e:	7d 84       	ldd	r7, Y+13	; 0x0d
 c90:	8c 84       	ldd	r8, Y+12	; 0x0c
 c92:	9b 84       	ldd	r9, Y+11	; 0x0b
 c94:	aa 84       	ldd	r10, Y+10	; 0x0a
 c96:	b9 84       	ldd	r11, Y+9	; 0x09
 c98:	c8 84       	ldd	r12, Y+8	; 0x08
 c9a:	df 80       	ldd	r13, Y+7	; 0x07
 c9c:	ee 80       	ldd	r14, Y+6	; 0x06
 c9e:	fd 80       	ldd	r15, Y+5	; 0x05
 ca0:	0c 81       	ldd	r16, Y+4	; 0x04
 ca2:	1b 81       	ldd	r17, Y+3	; 0x03
 ca4:	aa 81       	ldd	r26, Y+2	; 0x02
 ca6:	b9 81       	ldd	r27, Y+1	; 0x01
 ca8:	ce 0f       	add	r28, r30
 caa:	d1 1d       	adc	r29, r1
 cac:	0f b6       	in	r0, 0x3f	; 63
 cae:	f8 94       	cli
 cb0:	de bf       	out	0x3e, r29	; 62
 cb2:	0f be       	out	0x3f, r0	; 63
 cb4:	cd bf       	out	0x3d, r28	; 61
 cb6:	ed 01       	movw	r28, r26
 cb8:	08 95       	ret

00000cba <__umulhisi3>:
 cba:	a2 9f       	mul	r26, r18
 cbc:	b0 01       	movw	r22, r0
 cbe:	b3 9f       	mul	r27, r19
 cc0:	c0 01       	movw	r24, r0
 cc2:	a3 9f       	mul	r26, r19
 cc4:	70 0d       	add	r23, r0
 cc6:	81 1d       	adc	r24, r1
 cc8:	11 24       	eor	r1, r1
 cca:	91 1d       	adc	r25, r1
 ccc:	b2 9f       	mul	r27, r18
 cce:	70 0d       	add	r23, r0
 cd0:	81 1d       	adc	r24, r1
 cd2:	11 24       	eor	r1, r1
 cd4:	91 1d       	adc	r25, r1
 cd6:	08 95       	ret

00000cd8 <_exit>:
 cd8:	f8 94       	cli

00000cda <__stop_program>:
 cda:	ff cf       	rjmp	.-2      	; 0xcda <__stop_program>
